{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1N5YuXUyR3Pdkqa5B10DliQycTJnY2w2E","timestamp":1706677713884},{"file_id":"1CyiOwPG1ro5iT_4AMN2ptqaYvTWfLYQ1","timestamp":1704670145794}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **EXPLORATORY DATA ANALYSIS OF THE WORLD POPULATION DATASET**"],"metadata":{"id":"ZuzNEX9oL91Q"}},{"cell_type":"markdown","source":["# **Introduction**\n","- The growing global population is a complex phenomenon that presents both opportunities and challenges for countries around the world.\n","- This project aims to conduct a descriptive analysis of the world population as of 08/01/2024, utilizing a comprehensive dataset.\n","- Understanding the dynamics of population growth and distribution is crucial for governments, policymakers, and businesses to make informed decisions that address the associated opportunities and challenges."],"metadata":{"id":"O5gMsAlBZMz2"}},{"cell_type":"markdown","source":["## **Python Libraries**\n","- Python libraries are pre-written pieces of code that provide functionality to simplify complex tasks.\n","- In data science, certain libraries are essential for data manipulation, analysis, and visualization.\n","\n","**Examples of Python Libraries Commonly Used in Data Analysis**\n","1. Pandas\n","2. Numpy\n","3. Matplotlib\n","4. Seaborn"],"metadata":{"id":"6kDSsQzvj8ia"}},{"cell_type":"markdown","source":["# **Business Problem**\n","- The ever increasing world population brings forth several opportunities for humanity but also leads to the increase in challenges faced by countries.\n","- Opportunities may include a more robust labour force, innovations, cultural diversity and economic growth due to increased production and consumption.\n","- On the other hand, increased pressure on available resources and infrastructure, high pollution, wastage, unemployment, among other challenges are experienced due to a high population.\n","- This project is a descriptive analysis of the world population as at 08/01/2024. It is a starting point into understanding the complexities created by population growth and distribution."],"metadata":{"id":"4wMnhK5mI1v3"}},{"cell_type":"markdown","source":["## **Objectives**\n","The main objective is to understand the basics of Pandas library and use this knowledge to perform analysis on the given dataset.\n","\n","**Specific Objectives**  \n","To use Pandas in conjunction with Matplotlib and Seaborn to:\n","1. Understand population distribution across different regions and countries.\n","2. Analyze demographic trends and growth rates.\n","3. Identify countries with significant population changes."],"metadata":{"id":"m8dGld6jI4Zz"}},{"cell_type":"markdown","source":["## **The Pandas Library**\n","- Pandas is a powerful library for data manipulation and analysis.\n","- DataFrames are two-dimensional labeled data structures, and Series are one-dimensional labeled arrays.\n","- See the [Pandas documentation here](https://pandas.pydata.org/docs/) for more information.\n","- Information about DataFrames is [here](https://pandas.pydata.org/docs/reference/frame.html)."],"metadata":{"id":"oAC2cZxkI0Dy"}},{"cell_type":"markdown","source":["# **Setup and Importing Libraries**"],"metadata":{"id":"qJ-j3msuUyOq"}},{"cell_type":"code","source":["# pip install geodatasets"],"metadata":{"id":"KVBDRi9pJX_f"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A3RVG4SxzEnY"},"outputs":[],"source":["# importing libraries\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","# import geopandas as gpd\n","# import geodatasets"]},{"cell_type":"markdown","source":["# **Loading the Dataset**"],"metadata":{"id":"MvUnvZJvU7nH"}},{"cell_type":"markdown","source":["- You can import import a file to the notebook by:\n","1. Using a url\n","2. Uploading the file then referencing it in the file reading function, e.g. `read_csv()` , `read_json`, `read_excel`(), etc.   \n","\n","([More info here ](https://pandas.pydata.org/docs/user_guide/io.html#io-read-csv-table))\n","\n","- Once the file is loaded and called, a data table is displayed.\n","- In pandas, a data table is called a **`DataFrame`**.\n","\n"],"metadata":{"id":"ObYyJzB4bE0C"}},{"cell_type":"code","source":["#  importing the data\n","\n","url = \"https://raw.githubusercontent.com/kuriawaruchu/World-Population-EDA/main/countries-table.csv\"\n","data = pd.read_csv(url)\n","data\n","\n","# data = pd.read_csv(\"/content/countries-table.csv\") # \"countries-table.csv\"\n","# data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":496},"id":"Oj-e_GkblDtA","executionInfo":{"status":"ok","timestamp":1706640725706,"user_tz":-180,"elapsed":666,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"1065affd-aa2e-4081-c99b-4eaed8e07107"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     place      pop1980       pop2000       pop2010       pop2023  \\\n","0      356  696828385.0  1.059634e+09  1.240614e+09  1.428628e+09   \n","1      156  982372466.0  1.264099e+09  1.348191e+09  1.425671e+09   \n","2      840  223140018.0  2.823986e+08  3.111828e+08  3.399966e+08   \n","3      360  148177096.0  2.140724e+08  2.440162e+08  2.775341e+08   \n","4      586   80624057.0  1.543699e+08  1.944545e+08  2.404857e+08   \n","..     ...          ...           ...           ...           ...   \n","229    500      11452.0  5.138000e+03  4.938000e+03  4.386000e+03   \n","230    238       2240.0  3.080000e+03  3.187000e+03  3.791000e+03   \n","231    570       3637.0  2.074000e+03  1.812000e+03  1.935000e+03   \n","232    772       1647.0  1.666000e+03  1.367000e+03  1.893000e+03   \n","233    336        733.0  6.510000e+02  5.960000e+02  5.180000e+02   \n","\n","          pop2024       pop2030       pop2050           country        area  \\\n","0    1.441720e+09  1.514994e+09  1.670491e+09             India  3287590.00   \n","1    1.425179e+09  1.415606e+09  1.312636e+09             China  9706961.00   \n","2    3.418144e+08  3.521623e+08  3.753920e+08     United States  9372610.00   \n","3    2.797980e+08  2.921501e+08  3.172252e+08         Indonesia  1904569.00   \n","4    2.452098e+08  2.740298e+08  3.678085e+08          Pakistan   881912.00   \n","..            ...           ...           ...               ...         ...   \n","229  4.372000e+03  4.301000e+03  3.781000e+03        Montserrat      102.00   \n","230  3.803000e+03  3.869000e+03  3.779000e+03  Falkland Islands    12173.00   \n","231  1.935000e+03  1.948000e+03  2.096000e+03              Niue      261.00   \n","232  1.915000e+03  2.046000e+03  2.430000e+03           Tokelau       12.00   \n","233  5.260000e+02  5.610000e+02  7.310000e+02      Vatican City        0.44   \n","\n","     landAreaKm cca2 cca3  unMember  netChange  growthRate  worldPercentage  \\\n","0    2973190.00   IN  IND      True     0.4114      0.0092           0.1801   \n","1    9424702.90   CN  CHN      True    -0.0199     -0.0003           0.1780   \n","2    9147420.00   US  USA      True     0.0571      0.0053           0.0427   \n","3    1877519.00   ID  IDN      True     0.0707      0.0082           0.0350   \n","4     770880.00   PK  PAK      True     0.1499      0.0196           0.0306   \n","..          ...  ...  ...       ...        ...         ...              ...   \n","229      102.00   MS  MSR     False        NaN     -0.0032              NaN   \n","230    12173.00   FK  FLK     False        NaN      0.0032              NaN   \n","231      261.00   NU  NIU     False     0.0000      0.0000              NaN   \n","232       10.00   TK  TKL     False        NaN      0.0116              NaN   \n","233        0.44   VA  VAT      True        NaN      0.0154              NaN   \n","\n","       density  densityMi  rank  \n","0     484.9067  1255.9084     1  \n","1     151.2174   391.6530     2  \n","2      37.3673    96.7813     3  \n","3     149.0254   385.9758     4  \n","4     318.0908   823.8551     5  \n","..         ...        ...   ...  \n","229    42.8627   111.0145   230  \n","230     0.3124     0.8091   231  \n","231     7.4138    19.2017   232  \n","232   191.5000   495.9850   233  \n","233  1195.4545  3096.2273   234  \n","\n","[234 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-0408583e-48b1-4139-9609-ef1935c6d1d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>place</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>cca2</th>\n","      <th>cca3</th>\n","      <th>unMember</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>densityMi</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>356</td>\n","      <td>696828385.0</td>\n","      <td>1.059634e+09</td>\n","      <td>1.240614e+09</td>\n","      <td>1.428628e+09</td>\n","      <td>1.441720e+09</td>\n","      <td>1.514994e+09</td>\n","      <td>1.670491e+09</td>\n","      <td>India</td>\n","      <td>3287590.00</td>\n","      <td>2973190.00</td>\n","      <td>IN</td>\n","      <td>IND</td>\n","      <td>True</td>\n","      <td>0.4114</td>\n","      <td>0.0092</td>\n","      <td>0.1801</td>\n","      <td>484.9067</td>\n","      <td>1255.9084</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>156</td>\n","      <td>982372466.0</td>\n","      <td>1.264099e+09</td>\n","      <td>1.348191e+09</td>\n","      <td>1.425671e+09</td>\n","      <td>1.425179e+09</td>\n","      <td>1.415606e+09</td>\n","      <td>1.312636e+09</td>\n","      <td>China</td>\n","      <td>9706961.00</td>\n","      <td>9424702.90</td>\n","      <td>CN</td>\n","      <td>CHN</td>\n","      <td>True</td>\n","      <td>-0.0199</td>\n","      <td>-0.0003</td>\n","      <td>0.1780</td>\n","      <td>151.2174</td>\n","      <td>391.6530</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>840</td>\n","      <td>223140018.0</td>\n","      <td>2.823986e+08</td>\n","      <td>3.111828e+08</td>\n","      <td>3.399966e+08</td>\n","      <td>3.418144e+08</td>\n","      <td>3.521623e+08</td>\n","      <td>3.753920e+08</td>\n","      <td>United States</td>\n","      <td>9372610.00</td>\n","      <td>9147420.00</td>\n","      <td>US</td>\n","      <td>USA</td>\n","      <td>True</td>\n","      <td>0.0571</td>\n","      <td>0.0053</td>\n","      <td>0.0427</td>\n","      <td>37.3673</td>\n","      <td>96.7813</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>360</td>\n","      <td>148177096.0</td>\n","      <td>2.140724e+08</td>\n","      <td>2.440162e+08</td>\n","      <td>2.775341e+08</td>\n","      <td>2.797980e+08</td>\n","      <td>2.921501e+08</td>\n","      <td>3.172252e+08</td>\n","      <td>Indonesia</td>\n","      <td>1904569.00</td>\n","      <td>1877519.00</td>\n","      <td>ID</td>\n","      <td>IDN</td>\n","      <td>True</td>\n","      <td>0.0707</td>\n","      <td>0.0082</td>\n","      <td>0.0350</td>\n","      <td>149.0254</td>\n","      <td>385.9758</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>586</td>\n","      <td>80624057.0</td>\n","      <td>1.543699e+08</td>\n","      <td>1.944545e+08</td>\n","      <td>2.404857e+08</td>\n","      <td>2.452098e+08</td>\n","      <td>2.740298e+08</td>\n","      <td>3.678085e+08</td>\n","      <td>Pakistan</td>\n","      <td>881912.00</td>\n","      <td>770880.00</td>\n","      <td>PK</td>\n","      <td>PAK</td>\n","      <td>True</td>\n","      <td>0.1499</td>\n","      <td>0.0196</td>\n","      <td>0.0306</td>\n","      <td>318.0908</td>\n","      <td>823.8551</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>500</td>\n","      <td>11452.0</td>\n","      <td>5.138000e+03</td>\n","      <td>4.938000e+03</td>\n","      <td>4.386000e+03</td>\n","      <td>4.372000e+03</td>\n","      <td>4.301000e+03</td>\n","      <td>3.781000e+03</td>\n","      <td>Montserrat</td>\n","      <td>102.00</td>\n","      <td>102.00</td>\n","      <td>MS</td>\n","      <td>MSR</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>-0.0032</td>\n","      <td>NaN</td>\n","      <td>42.8627</td>\n","      <td>111.0145</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>238</td>\n","      <td>2240.0</td>\n","      <td>3.080000e+03</td>\n","      <td>3.187000e+03</td>\n","      <td>3.791000e+03</td>\n","      <td>3.803000e+03</td>\n","      <td>3.869000e+03</td>\n","      <td>3.779000e+03</td>\n","      <td>Falkland Islands</td>\n","      <td>12173.00</td>\n","      <td>12173.00</td>\n","      <td>FK</td>\n","      <td>FLK</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>0.0032</td>\n","      <td>NaN</td>\n","      <td>0.3124</td>\n","      <td>0.8091</td>\n","      <td>231</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>570</td>\n","      <td>3637.0</td>\n","      <td>2.074000e+03</td>\n","      <td>1.812000e+03</td>\n","      <td>1.935000e+03</td>\n","      <td>1.935000e+03</td>\n","      <td>1.948000e+03</td>\n","      <td>2.096000e+03</td>\n","      <td>Niue</td>\n","      <td>261.00</td>\n","      <td>261.00</td>\n","      <td>NU</td>\n","      <td>NIU</td>\n","      <td>False</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>NaN</td>\n","      <td>7.4138</td>\n","      <td>19.2017</td>\n","      <td>232</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>772</td>\n","      <td>1647.0</td>\n","      <td>1.666000e+03</td>\n","      <td>1.367000e+03</td>\n","      <td>1.893000e+03</td>\n","      <td>1.915000e+03</td>\n","      <td>2.046000e+03</td>\n","      <td>2.430000e+03</td>\n","      <td>Tokelau</td>\n","      <td>12.00</td>\n","      <td>10.00</td>\n","      <td>TK</td>\n","      <td>TKL</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>0.0116</td>\n","      <td>NaN</td>\n","      <td>191.5000</td>\n","      <td>495.9850</td>\n","      <td>233</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>336</td>\n","      <td>733.0</td>\n","      <td>6.510000e+02</td>\n","      <td>5.960000e+02</td>\n","      <td>5.180000e+02</td>\n","      <td>5.260000e+02</td>\n","      <td>5.610000e+02</td>\n","      <td>7.310000e+02</td>\n","      <td>Vatican City</td>\n","      <td>0.44</td>\n","      <td>0.44</td>\n","      <td>VA</td>\n","      <td>VAT</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>0.0154</td>\n","      <td>NaN</td>\n","      <td>1195.4545</td>\n","      <td>3096.2273</td>\n","      <td>234</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>234 rows × 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0408583e-48b1-4139-9609-ef1935c6d1d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0408583e-48b1-4139-9609-ef1935c6d1d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0408583e-48b1-4139-9609-ef1935c6d1d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e638b713-8c6f-4b43-b495-934e5dd547d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e638b713-8c6f-4b43-b495-934e5dd547d9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e638b713-8c6f-4b43-b495-934e5dd547d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_52fc4429-3b47-497e-8e3f-ee86f369a237\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_52fc4429-3b47-497e-8e3f-ee86f369a237 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# **Data Understanding**\n","- The dataset contains varied information on countries.\n","- The data was sourced from [World Population Review](https://worldpopulationreview.com/countries) on 08/01/2024.\n","- It has 234 rows and 20 columns.\n"],"metadata":{"id":"VETtvRoMI_Ii"}},{"cell_type":"markdown","source":["# **Exploratory Data Analysis (EDA)**"],"metadata":{"id":"WweSIx2qNWO7"}},{"cell_type":"markdown","source":["## **Data Preparation and Cleaning**"],"metadata":{"id":"VWfT366_PZBs"}},{"cell_type":"markdown","source":["### **1. `.info()`**\n","- Prints a concise summary of a DataFrame.\n","- Contains information about index dtype and columns, non-null values and memory usage."],"metadata":{"id":"eBAJ85BRYOI6"}},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fQo1rn-co5cR","executionInfo":{"status":"ok","timestamp":1706640725706,"user_tz":-180,"elapsed":38,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"cb486b36-3732-4d67-cd08-b13abe1b7a75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 234 entries, 0 to 233\n","Data columns (total 20 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   place            234 non-null    int64  \n"," 1   pop1980          234 non-null    float64\n"," 2   pop2000          234 non-null    float64\n"," 3   pop2010          234 non-null    float64\n"," 4   pop2023          234 non-null    float64\n"," 5   pop2024          234 non-null    float64\n"," 6   pop2030          234 non-null    float64\n"," 7   pop2050          234 non-null    float64\n"," 8   country          234 non-null    object \n"," 9   area             234 non-null    float64\n"," 10  landAreaKm       234 non-null    float64\n"," 11  cca2             233 non-null    object \n"," 12  cca3             234 non-null    object \n"," 13  unMember         234 non-null    bool   \n"," 14  netChange        224 non-null    float64\n"," 15  growthRate       234 non-null    float64\n"," 16  worldPercentage  228 non-null    float64\n"," 17  density          234 non-null    float64\n"," 18  densityMi        234 non-null    float64\n"," 19  rank             234 non-null    int64  \n","dtypes: bool(1), float64(14), int64(2), object(3)\n","memory usage: 35.1+ KB\n"]}]},{"cell_type":"markdown","source":["**Observations**\n","- The data has 234 rows (index 0 to 233) and 20 columns (index 0 to 19)\n","- Some columns have missing data (`cca2`, `netChange`, `worldPercentage`)."],"metadata":{"id":"2Ims-9R8tRSC"}},{"cell_type":"markdown","source":["### **2. `.head()`**\n","- Return the first n rows.\n","- Default n is 5.\n","- You can pass the number of rows you wish to view inside the function brackets."],"metadata":{"id":"PHm_uXnrYfti"}},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"iBwFNbxXYshI","executionInfo":{"status":"ok","timestamp":1706640725707,"user_tz":-180,"elapsed":36,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"4f27e760-21dd-4d69-e9b0-404f37149701"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   place      pop1980       pop2000       pop2010       pop2023       pop2024  \\\n","0    356  696828385.0  1.059634e+09  1.240614e+09  1.428628e+09  1.441720e+09   \n","1    156  982372466.0  1.264099e+09  1.348191e+09  1.425671e+09  1.425179e+09   \n","2    840  223140018.0  2.823986e+08  3.111828e+08  3.399966e+08  3.418144e+08   \n","3    360  148177096.0  2.140724e+08  2.440162e+08  2.775341e+08  2.797980e+08   \n","4    586   80624057.0  1.543699e+08  1.944545e+08  2.404857e+08  2.452098e+08   \n","\n","        pop2030       pop2050        country       area  landAreaKm cca2 cca3  \\\n","0  1.514994e+09  1.670491e+09          India  3287590.0   2973190.0   IN  IND   \n","1  1.415606e+09  1.312636e+09          China  9706961.0   9424702.9   CN  CHN   \n","2  3.521623e+08  3.753920e+08  United States  9372610.0   9147420.0   US  USA   \n","3  2.921501e+08  3.172252e+08      Indonesia  1904569.0   1877519.0   ID  IDN   \n","4  2.740298e+08  3.678085e+08       Pakistan   881912.0    770880.0   PK  PAK   \n","\n","   unMember  netChange  growthRate  worldPercentage   density  densityMi  rank  \n","0      True     0.4114      0.0092           0.1801  484.9067  1255.9084     1  \n","1      True    -0.0199     -0.0003           0.1780  151.2174   391.6530     2  \n","2      True     0.0571      0.0053           0.0427   37.3673    96.7813     3  \n","3      True     0.0707      0.0082           0.0350  149.0254   385.9758     4  \n","4      True     0.1499      0.0196           0.0306  318.0908   823.8551     5  "],"text/html":["\n","  <div id=\"df-5939a117-487a-40bb-ac28-97aa608972d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>place</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>cca2</th>\n","      <th>cca3</th>\n","      <th>unMember</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>densityMi</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>356</td>\n","      <td>696828385.0</td>\n","      <td>1.059634e+09</td>\n","      <td>1.240614e+09</td>\n","      <td>1.428628e+09</td>\n","      <td>1.441720e+09</td>\n","      <td>1.514994e+09</td>\n","      <td>1.670491e+09</td>\n","      <td>India</td>\n","      <td>3287590.0</td>\n","      <td>2973190.0</td>\n","      <td>IN</td>\n","      <td>IND</td>\n","      <td>True</td>\n","      <td>0.4114</td>\n","      <td>0.0092</td>\n","      <td>0.1801</td>\n","      <td>484.9067</td>\n","      <td>1255.9084</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>156</td>\n","      <td>982372466.0</td>\n","      <td>1.264099e+09</td>\n","      <td>1.348191e+09</td>\n","      <td>1.425671e+09</td>\n","      <td>1.425179e+09</td>\n","      <td>1.415606e+09</td>\n","      <td>1.312636e+09</td>\n","      <td>China</td>\n","      <td>9706961.0</td>\n","      <td>9424702.9</td>\n","      <td>CN</td>\n","      <td>CHN</td>\n","      <td>True</td>\n","      <td>-0.0199</td>\n","      <td>-0.0003</td>\n","      <td>0.1780</td>\n","      <td>151.2174</td>\n","      <td>391.6530</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>840</td>\n","      <td>223140018.0</td>\n","      <td>2.823986e+08</td>\n","      <td>3.111828e+08</td>\n","      <td>3.399966e+08</td>\n","      <td>3.418144e+08</td>\n","      <td>3.521623e+08</td>\n","      <td>3.753920e+08</td>\n","      <td>United States</td>\n","      <td>9372610.0</td>\n","      <td>9147420.0</td>\n","      <td>US</td>\n","      <td>USA</td>\n","      <td>True</td>\n","      <td>0.0571</td>\n","      <td>0.0053</td>\n","      <td>0.0427</td>\n","      <td>37.3673</td>\n","      <td>96.7813</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>360</td>\n","      <td>148177096.0</td>\n","      <td>2.140724e+08</td>\n","      <td>2.440162e+08</td>\n","      <td>2.775341e+08</td>\n","      <td>2.797980e+08</td>\n","      <td>2.921501e+08</td>\n","      <td>3.172252e+08</td>\n","      <td>Indonesia</td>\n","      <td>1904569.0</td>\n","      <td>1877519.0</td>\n","      <td>ID</td>\n","      <td>IDN</td>\n","      <td>True</td>\n","      <td>0.0707</td>\n","      <td>0.0082</td>\n","      <td>0.0350</td>\n","      <td>149.0254</td>\n","      <td>385.9758</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>586</td>\n","      <td>80624057.0</td>\n","      <td>1.543699e+08</td>\n","      <td>1.944545e+08</td>\n","      <td>2.404857e+08</td>\n","      <td>2.452098e+08</td>\n","      <td>2.740298e+08</td>\n","      <td>3.678085e+08</td>\n","      <td>Pakistan</td>\n","      <td>881912.0</td>\n","      <td>770880.0</td>\n","      <td>PK</td>\n","      <td>PAK</td>\n","      <td>True</td>\n","      <td>0.1499</td>\n","      <td>0.0196</td>\n","      <td>0.0306</td>\n","      <td>318.0908</td>\n","      <td>823.8551</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5939a117-487a-40bb-ac28-97aa608972d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5939a117-487a-40bb-ac28-97aa608972d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5939a117-487a-40bb-ac28-97aa608972d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3f0abc79-d6b5-4a7c-9b30-7e47fcf907c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f0abc79-d6b5-4a7c-9b30-7e47fcf907c2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3f0abc79-d6b5-4a7c-9b30-7e47fcf907c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data.head(10) # returns the first 10 rows"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":400},"id":"LQBt5lRLa4_3","executionInfo":{"status":"ok","timestamp":1706640725707,"user_tz":-180,"elapsed":35,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"836b519f-4076-41a4-ef75-78768e394701"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   place      pop1980       pop2000       pop2010       pop2023       pop2024  \\\n","0    356  696828385.0  1.059634e+09  1.240614e+09  1.428628e+09  1.441720e+09   \n","1    156  982372466.0  1.264099e+09  1.348191e+09  1.425671e+09  1.425179e+09   \n","2    840  223140018.0  2.823986e+08  3.111828e+08  3.399966e+08  3.418144e+08   \n","3    360  148177096.0  2.140724e+08  2.440162e+08  2.775341e+08  2.797980e+08   \n","4    586   80624057.0  1.543699e+08  1.944545e+08  2.404857e+08  2.452098e+08   \n","5    566   72951439.0  1.228520e+08  1.609529e+08  2.238046e+08  2.291522e+08   \n","6     76  122288383.0  1.758737e+08  1.963535e+08  2.164224e+08  2.176373e+08   \n","7     50   83929765.0  1.291933e+08  1.483911e+08  1.729543e+08  1.747012e+08   \n","8    643  138257420.0  1.468448e+08  1.432426e+08  1.444444e+08  1.439571e+08   \n","9    231   34945469.0  6.703187e+07  8.923779e+07  1.265271e+08  1.297197e+08   \n","\n","        pop2030       pop2050        country        area  landAreaKm cca2  \\\n","0  1.514994e+09  1.670491e+09          India   3287590.0   2973190.0   IN   \n","1  1.415606e+09  1.312636e+09          China   9706961.0   9424702.9   CN   \n","2  3.521623e+08  3.753920e+08  United States   9372610.0   9147420.0   US   \n","3  2.921501e+08  3.172252e+08      Indonesia   1904569.0   1877519.0   ID   \n","4  2.740298e+08  3.678085e+08       Pakistan    881912.0    770880.0   PK   \n","5  2.625804e+08  3.774599e+08        Nigeria    923768.0    910770.0   NG   \n","6  2.239090e+08  2.308857e+08         Brazil   8515767.0   8358140.0   BR   \n","7  1.844241e+08  2.039049e+08     Bangladesh    147570.0    130170.0   BD   \n","8  1.414327e+08  1.331330e+08         Russia  17098242.0  16376870.0   RU   \n","9  1.492964e+08  2.148123e+08       Ethiopia   1104300.0   1128571.3   ET   \n","\n","  cca3  unMember  netChange  growthRate  worldPercentage    density  \\\n","0  IND      True     0.4114      0.0092           0.1801   484.9067   \n","1  CHN      True    -0.0199     -0.0003           0.1780   151.2174   \n","2  USA      True     0.0571      0.0053           0.0427    37.3673   \n","3  IDN      True     0.0707      0.0082           0.0350   149.0254   \n","4  PAK      True     0.1499      0.0196           0.0306   318.0908   \n","5  NGA      True     0.1709      0.0239           0.0286   251.6027   \n","6  BRA      True     0.0377      0.0056           0.0272    26.0390   \n","7  BGD      True     0.0550      0.0101           0.0218  1342.1004   \n","8  RUS      True    -0.0151     -0.0034           0.0180     8.7903   \n","9  ETH      True     0.1016      0.0252           0.0162   114.9415   \n","\n","   densityMi  rank  \n","0  1255.9084     1  \n","1   391.6530     2  \n","2    96.7813     3  \n","3   385.9758     4  \n","4   823.8551     5  \n","5   651.6511     6  \n","6    67.4409     7  \n","7  3476.0401     8  \n","8    22.7668     9  \n","9   297.6986    10  "],"text/html":["\n","  <div id=\"df-c8409fcc-54a7-42a8-8f61-284a64562431\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>place</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>cca2</th>\n","      <th>cca3</th>\n","      <th>unMember</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>densityMi</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>356</td>\n","      <td>696828385.0</td>\n","      <td>1.059634e+09</td>\n","      <td>1.240614e+09</td>\n","      <td>1.428628e+09</td>\n","      <td>1.441720e+09</td>\n","      <td>1.514994e+09</td>\n","      <td>1.670491e+09</td>\n","      <td>India</td>\n","      <td>3287590.0</td>\n","      <td>2973190.0</td>\n","      <td>IN</td>\n","      <td>IND</td>\n","      <td>True</td>\n","      <td>0.4114</td>\n","      <td>0.0092</td>\n","      <td>0.1801</td>\n","      <td>484.9067</td>\n","      <td>1255.9084</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>156</td>\n","      <td>982372466.0</td>\n","      <td>1.264099e+09</td>\n","      <td>1.348191e+09</td>\n","      <td>1.425671e+09</td>\n","      <td>1.425179e+09</td>\n","      <td>1.415606e+09</td>\n","      <td>1.312636e+09</td>\n","      <td>China</td>\n","      <td>9706961.0</td>\n","      <td>9424702.9</td>\n","      <td>CN</td>\n","      <td>CHN</td>\n","      <td>True</td>\n","      <td>-0.0199</td>\n","      <td>-0.0003</td>\n","      <td>0.1780</td>\n","      <td>151.2174</td>\n","      <td>391.6530</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>840</td>\n","      <td>223140018.0</td>\n","      <td>2.823986e+08</td>\n","      <td>3.111828e+08</td>\n","      <td>3.399966e+08</td>\n","      <td>3.418144e+08</td>\n","      <td>3.521623e+08</td>\n","      <td>3.753920e+08</td>\n","      <td>United States</td>\n","      <td>9372610.0</td>\n","      <td>9147420.0</td>\n","      <td>US</td>\n","      <td>USA</td>\n","      <td>True</td>\n","      <td>0.0571</td>\n","      <td>0.0053</td>\n","      <td>0.0427</td>\n","      <td>37.3673</td>\n","      <td>96.7813</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>360</td>\n","      <td>148177096.0</td>\n","      <td>2.140724e+08</td>\n","      <td>2.440162e+08</td>\n","      <td>2.775341e+08</td>\n","      <td>2.797980e+08</td>\n","      <td>2.921501e+08</td>\n","      <td>3.172252e+08</td>\n","      <td>Indonesia</td>\n","      <td>1904569.0</td>\n","      <td>1877519.0</td>\n","      <td>ID</td>\n","      <td>IDN</td>\n","      <td>True</td>\n","      <td>0.0707</td>\n","      <td>0.0082</td>\n","      <td>0.0350</td>\n","      <td>149.0254</td>\n","      <td>385.9758</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>586</td>\n","      <td>80624057.0</td>\n","      <td>1.543699e+08</td>\n","      <td>1.944545e+08</td>\n","      <td>2.404857e+08</td>\n","      <td>2.452098e+08</td>\n","      <td>2.740298e+08</td>\n","      <td>3.678085e+08</td>\n","      <td>Pakistan</td>\n","      <td>881912.0</td>\n","      <td>770880.0</td>\n","      <td>PK</td>\n","      <td>PAK</td>\n","      <td>True</td>\n","      <td>0.1499</td>\n","      <td>0.0196</td>\n","      <td>0.0306</td>\n","      <td>318.0908</td>\n","      <td>823.8551</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>566</td>\n","      <td>72951439.0</td>\n","      <td>1.228520e+08</td>\n","      <td>1.609529e+08</td>\n","      <td>2.238046e+08</td>\n","      <td>2.291522e+08</td>\n","      <td>2.625804e+08</td>\n","      <td>3.774599e+08</td>\n","      <td>Nigeria</td>\n","      <td>923768.0</td>\n","      <td>910770.0</td>\n","      <td>NG</td>\n","      <td>NGA</td>\n","      <td>True</td>\n","      <td>0.1709</td>\n","      <td>0.0239</td>\n","      <td>0.0286</td>\n","      <td>251.6027</td>\n","      <td>651.6511</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>76</td>\n","      <td>122288383.0</td>\n","      <td>1.758737e+08</td>\n","      <td>1.963535e+08</td>\n","      <td>2.164224e+08</td>\n","      <td>2.176373e+08</td>\n","      <td>2.239090e+08</td>\n","      <td>2.308857e+08</td>\n","      <td>Brazil</td>\n","      <td>8515767.0</td>\n","      <td>8358140.0</td>\n","      <td>BR</td>\n","      <td>BRA</td>\n","      <td>True</td>\n","      <td>0.0377</td>\n","      <td>0.0056</td>\n","      <td>0.0272</td>\n","      <td>26.0390</td>\n","      <td>67.4409</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>50</td>\n","      <td>83929765.0</td>\n","      <td>1.291933e+08</td>\n","      <td>1.483911e+08</td>\n","      <td>1.729543e+08</td>\n","      <td>1.747012e+08</td>\n","      <td>1.844241e+08</td>\n","      <td>2.039049e+08</td>\n","      <td>Bangladesh</td>\n","      <td>147570.0</td>\n","      <td>130170.0</td>\n","      <td>BD</td>\n","      <td>BGD</td>\n","      <td>True</td>\n","      <td>0.0550</td>\n","      <td>0.0101</td>\n","      <td>0.0218</td>\n","      <td>1342.1004</td>\n","      <td>3476.0401</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>643</td>\n","      <td>138257420.0</td>\n","      <td>1.468448e+08</td>\n","      <td>1.432426e+08</td>\n","      <td>1.444444e+08</td>\n","      <td>1.439571e+08</td>\n","      <td>1.414327e+08</td>\n","      <td>1.331330e+08</td>\n","      <td>Russia</td>\n","      <td>17098242.0</td>\n","      <td>16376870.0</td>\n","      <td>RU</td>\n","      <td>RUS</td>\n","      <td>True</td>\n","      <td>-0.0151</td>\n","      <td>-0.0034</td>\n","      <td>0.0180</td>\n","      <td>8.7903</td>\n","      <td>22.7668</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>231</td>\n","      <td>34945469.0</td>\n","      <td>6.703187e+07</td>\n","      <td>8.923779e+07</td>\n","      <td>1.265271e+08</td>\n","      <td>1.297197e+08</td>\n","      <td>1.492964e+08</td>\n","      <td>2.148123e+08</td>\n","      <td>Ethiopia</td>\n","      <td>1104300.0</td>\n","      <td>1128571.3</td>\n","      <td>ET</td>\n","      <td>ETH</td>\n","      <td>True</td>\n","      <td>0.1016</td>\n","      <td>0.0252</td>\n","      <td>0.0162</td>\n","      <td>114.9415</td>\n","      <td>297.6986</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8409fcc-54a7-42a8-8f61-284a64562431')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c8409fcc-54a7-42a8-8f61-284a64562431 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c8409fcc-54a7-42a8-8f61-284a64562431');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-49bb38d7-f3ee-4246-b2f7-30b7fec3726b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49bb38d7-f3ee-4246-b2f7-30b7fec3726b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-49bb38d7-f3ee-4246-b2f7-30b7fec3726b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### **3. `.tail()`**\n","- Opposite of `.head()`.\n","- Retruns the last n rows."],"metadata":{"id":"_qiJObA9a_zx"}},{"cell_type":"code","source":["data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"k8l4k7YDbL0r","executionInfo":{"status":"ok","timestamp":1706640725707,"user_tz":-180,"elapsed":34,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"e1a9b5ca-5590-4131-9794-5c7ac88796d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     place  pop1980  pop2000  pop2010  pop2023  pop2024  pop2030  pop2050  \\\n","229    500  11452.0   5138.0   4938.0   4386.0   4372.0   4301.0   3781.0   \n","230    238   2240.0   3080.0   3187.0   3791.0   3803.0   3869.0   3779.0   \n","231    570   3637.0   2074.0   1812.0   1935.0   1935.0   1948.0   2096.0   \n","232    772   1647.0   1666.0   1367.0   1893.0   1915.0   2046.0   2430.0   \n","233    336    733.0    651.0    596.0    518.0    526.0    561.0    731.0   \n","\n","              country      area  landAreaKm cca2 cca3  unMember  netChange  \\\n","229        Montserrat    102.00      102.00   MS  MSR     False        NaN   \n","230  Falkland Islands  12173.00    12173.00   FK  FLK     False        NaN   \n","231              Niue    261.00      261.00   NU  NIU     False        0.0   \n","232           Tokelau     12.00       10.00   TK  TKL     False        NaN   \n","233      Vatican City      0.44        0.44   VA  VAT      True        NaN   \n","\n","     growthRate  worldPercentage    density  densityMi  rank  \n","229     -0.0032              NaN    42.8627   111.0145   230  \n","230      0.0032              NaN     0.3124     0.8091   231  \n","231      0.0000              NaN     7.4138    19.2017   232  \n","232      0.0116              NaN   191.5000   495.9850   233  \n","233      0.0154              NaN  1195.4545  3096.2273   234  "],"text/html":["\n","  <div id=\"df-c9162ccd-32ff-414e-a7d6-e25a2b86974d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>place</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>cca2</th>\n","      <th>cca3</th>\n","      <th>unMember</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>densityMi</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>229</th>\n","      <td>500</td>\n","      <td>11452.0</td>\n","      <td>5138.0</td>\n","      <td>4938.0</td>\n","      <td>4386.0</td>\n","      <td>4372.0</td>\n","      <td>4301.0</td>\n","      <td>3781.0</td>\n","      <td>Montserrat</td>\n","      <td>102.00</td>\n","      <td>102.00</td>\n","      <td>MS</td>\n","      <td>MSR</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>-0.0032</td>\n","      <td>NaN</td>\n","      <td>42.8627</td>\n","      <td>111.0145</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>238</td>\n","      <td>2240.0</td>\n","      <td>3080.0</td>\n","      <td>3187.0</td>\n","      <td>3791.0</td>\n","      <td>3803.0</td>\n","      <td>3869.0</td>\n","      <td>3779.0</td>\n","      <td>Falkland Islands</td>\n","      <td>12173.00</td>\n","      <td>12173.00</td>\n","      <td>FK</td>\n","      <td>FLK</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>0.0032</td>\n","      <td>NaN</td>\n","      <td>0.3124</td>\n","      <td>0.8091</td>\n","      <td>231</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>570</td>\n","      <td>3637.0</td>\n","      <td>2074.0</td>\n","      <td>1812.0</td>\n","      <td>1935.0</td>\n","      <td>1935.0</td>\n","      <td>1948.0</td>\n","      <td>2096.0</td>\n","      <td>Niue</td>\n","      <td>261.00</td>\n","      <td>261.00</td>\n","      <td>NU</td>\n","      <td>NIU</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0000</td>\n","      <td>NaN</td>\n","      <td>7.4138</td>\n","      <td>19.2017</td>\n","      <td>232</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>772</td>\n","      <td>1647.0</td>\n","      <td>1666.0</td>\n","      <td>1367.0</td>\n","      <td>1893.0</td>\n","      <td>1915.0</td>\n","      <td>2046.0</td>\n","      <td>2430.0</td>\n","      <td>Tokelau</td>\n","      <td>12.00</td>\n","      <td>10.00</td>\n","      <td>TK</td>\n","      <td>TKL</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>0.0116</td>\n","      <td>NaN</td>\n","      <td>191.5000</td>\n","      <td>495.9850</td>\n","      <td>233</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>336</td>\n","      <td>733.0</td>\n","      <td>651.0</td>\n","      <td>596.0</td>\n","      <td>518.0</td>\n","      <td>526.0</td>\n","      <td>561.0</td>\n","      <td>731.0</td>\n","      <td>Vatican City</td>\n","      <td>0.44</td>\n","      <td>0.44</td>\n","      <td>VA</td>\n","      <td>VAT</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>0.0154</td>\n","      <td>NaN</td>\n","      <td>1195.4545</td>\n","      <td>3096.2273</td>\n","      <td>234</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9162ccd-32ff-414e-a7d6-e25a2b86974d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c9162ccd-32ff-414e-a7d6-e25a2b86974d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c9162ccd-32ff-414e-a7d6-e25a2b86974d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-583b378e-c856-4be3-bf9c-c3374237649d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-583b378e-c856-4be3-bf9c-c3374237649d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-583b378e-c856-4be3-bf9c-c3374237649d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["### **4. `.columns`**\n","- Display the DataFrame's column labels/names.\n","- Columns are also known as features."],"metadata":{"id":"pM91Rm9F9YD6"}},{"cell_type":"code","source":["data.columns"],"metadata":{"id":"h1TxfvTn9yB-","executionInfo":{"status":"ok","timestamp":1706640725707,"user_tz":-180,"elapsed":32,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"d68ea7a5-d0cb-4e03-8a6b-f9c388e812d1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['place', 'pop1980', 'pop2000', 'pop2010', 'pop2023', 'pop2024',\n","       'pop2030', 'pop2050', 'country', 'area', 'landAreaKm', 'cca2', 'cca3',\n","       'unMember', 'netChange', 'growthRate', 'worldPercentage', 'density',\n","       'densityMi', 'rank'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["### **5. Dropping some unnecessary columns**\n","- Why?"],"metadata":{"id":"Ss1Q4xwWf25h"}},{"cell_type":"markdown","source":["#### **a. `.drop()`**\n","- Remove rows or columns by\n","  - specifying label names and corresponding axis, or;\n","  - by directly specifying index or column names.\n","- .drop() makes a permanent change to the df."],"metadata":{"id":"TWwkSywCdAI8"}},{"cell_type":"code","source":["# define the columns to drop and store them in a list variable\n","drop_columns = [\"place\", \"cca2\", \"cca3\", \"unMember\", \"densityMi\"]\n","\n","# the columns parameter\n","# store the new df sans dropped columns in a new df\n","# to avoid modifying the original df\n","world_pop = data.drop(columns=drop_columns)\n","\n","# the code can be witten as below\n","# axis=1 - column; axis=0 - row\n","# df.drop([\"place\", \"cca2\", \"cca3\", \"unMember\", \"densityMi\"], axis=1)\n","\n","# world_pop.sort_index(inplace = True)\n","world_pop.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"9KxFkseplv9X","executionInfo":{"status":"ok","timestamp":1706640725707,"user_tz":-180,"elapsed":29,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"8e28f8ba-b6c0-48b1-be8b-738d9697ea52"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       pop1980       pop2000       pop2010       pop2023       pop2024  \\\n","0  696828385.0  1.059634e+09  1.240614e+09  1.428628e+09  1.441720e+09   \n","1  982372466.0  1.264099e+09  1.348191e+09  1.425671e+09  1.425179e+09   \n","2  223140018.0  2.823986e+08  3.111828e+08  3.399966e+08  3.418144e+08   \n","3  148177096.0  2.140724e+08  2.440162e+08  2.775341e+08  2.797980e+08   \n","4   80624057.0  1.543699e+08  1.944545e+08  2.404857e+08  2.452098e+08   \n","\n","        pop2030       pop2050        country       area  landAreaKm  \\\n","0  1.514994e+09  1.670491e+09          India  3287590.0   2973190.0   \n","1  1.415606e+09  1.312636e+09          China  9706961.0   9424702.9   \n","2  3.521623e+08  3.753920e+08  United States  9372610.0   9147420.0   \n","3  2.921501e+08  3.172252e+08      Indonesia  1904569.0   1877519.0   \n","4  2.740298e+08  3.678085e+08       Pakistan   881912.0    770880.0   \n","\n","   netChange  growthRate  worldPercentage   density  rank  \n","0     0.4114      0.0092           0.1801  484.9067     1  \n","1    -0.0199     -0.0003           0.1780  151.2174     2  \n","2     0.0571      0.0053           0.0427   37.3673     3  \n","3     0.0707      0.0082           0.0350  149.0254     4  \n","4     0.1499      0.0196           0.0306  318.0908     5  "],"text/html":["\n","  <div id=\"df-4fb116c4-6fc7-4b83-a508-9a77d9f9115d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>696828385.0</td>\n","      <td>1.059634e+09</td>\n","      <td>1.240614e+09</td>\n","      <td>1.428628e+09</td>\n","      <td>1.441720e+09</td>\n","      <td>1.514994e+09</td>\n","      <td>1.670491e+09</td>\n","      <td>India</td>\n","      <td>3287590.0</td>\n","      <td>2973190.0</td>\n","      <td>0.4114</td>\n","      <td>0.0092</td>\n","      <td>0.1801</td>\n","      <td>484.9067</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>982372466.0</td>\n","      <td>1.264099e+09</td>\n","      <td>1.348191e+09</td>\n","      <td>1.425671e+09</td>\n","      <td>1.425179e+09</td>\n","      <td>1.415606e+09</td>\n","      <td>1.312636e+09</td>\n","      <td>China</td>\n","      <td>9706961.0</td>\n","      <td>9424702.9</td>\n","      <td>-0.0199</td>\n","      <td>-0.0003</td>\n","      <td>0.1780</td>\n","      <td>151.2174</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>223140018.0</td>\n","      <td>2.823986e+08</td>\n","      <td>3.111828e+08</td>\n","      <td>3.399966e+08</td>\n","      <td>3.418144e+08</td>\n","      <td>3.521623e+08</td>\n","      <td>3.753920e+08</td>\n","      <td>United States</td>\n","      <td>9372610.0</td>\n","      <td>9147420.0</td>\n","      <td>0.0571</td>\n","      <td>0.0053</td>\n","      <td>0.0427</td>\n","      <td>37.3673</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>148177096.0</td>\n","      <td>2.140724e+08</td>\n","      <td>2.440162e+08</td>\n","      <td>2.775341e+08</td>\n","      <td>2.797980e+08</td>\n","      <td>2.921501e+08</td>\n","      <td>3.172252e+08</td>\n","      <td>Indonesia</td>\n","      <td>1904569.0</td>\n","      <td>1877519.0</td>\n","      <td>0.0707</td>\n","      <td>0.0082</td>\n","      <td>0.0350</td>\n","      <td>149.0254</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>80624057.0</td>\n","      <td>1.543699e+08</td>\n","      <td>1.944545e+08</td>\n","      <td>2.404857e+08</td>\n","      <td>2.452098e+08</td>\n","      <td>2.740298e+08</td>\n","      <td>3.678085e+08</td>\n","      <td>Pakistan</td>\n","      <td>881912.0</td>\n","      <td>770880.0</td>\n","      <td>0.1499</td>\n","      <td>0.0196</td>\n","      <td>0.0306</td>\n","      <td>318.0908</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fb116c4-6fc7-4b83-a508-9a77d9f9115d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fb116c4-6fc7-4b83-a508-9a77d9f9115d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fb116c4-6fc7-4b83-a508-9a77d9f9115d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-139b844c-e489-4d21-8670-a904a85732d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-139b844c-e489-4d21-8670-a904a85732d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-139b844c-e489-4d21-8670-a904a85732d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["world_pop.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8VbuV71Nr2Vt","executionInfo":{"status":"ok","timestamp":1706640725708,"user_tz":-180,"elapsed":28,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"6e0a97df-4038-43a1-854f-0905be19bb6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 234 entries, 0 to 233\n","Data columns (total 15 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   pop1980          234 non-null    float64\n"," 1   pop2000          234 non-null    float64\n"," 2   pop2010          234 non-null    float64\n"," 3   pop2023          234 non-null    float64\n"," 4   pop2024          234 non-null    float64\n"," 5   pop2030          234 non-null    float64\n"," 6   pop2050          234 non-null    float64\n"," 7   country          234 non-null    object \n"," 8   area             234 non-null    float64\n"," 9   landAreaKm       234 non-null    float64\n"," 10  netChange        224 non-null    float64\n"," 11  growthRate       234 non-null    float64\n"," 12  worldPercentage  228 non-null    float64\n"," 13  density          234 non-null    float64\n"," 14  rank             234 non-null    int64  \n","dtypes: float64(13), int64(1), object(1)\n","memory usage: 27.5+ KB\n"]}]},{"cell_type":"code","source":["world_pop.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":557},"id":"BZoSu9WexC75","executionInfo":{"status":"ok","timestamp":1706640725708,"user_tz":-180,"elapsed":25,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"3cf94a02-951e-4629-ec7a-6537c3808937"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        pop1980       pop2000       pop2010       pop2023       pop2024  \\\n","0   696828385.0  1.059634e+09  1.240614e+09  1.428628e+09  1.441720e+09   \n","1   982372466.0  1.264099e+09  1.348191e+09  1.425671e+09  1.425179e+09   \n","2   223140018.0  2.823986e+08  3.111828e+08  3.399966e+08  3.418144e+08   \n","3   148177096.0  2.140724e+08  2.440162e+08  2.775341e+08  2.797980e+08   \n","4    80624057.0  1.543699e+08  1.944545e+08  2.404857e+08  2.452098e+08   \n","5    72951439.0  1.228520e+08  1.609529e+08  2.238046e+08  2.291522e+08   \n","6   122288383.0  1.758737e+08  1.963535e+08  2.164224e+08  2.176373e+08   \n","7    83929765.0  1.291933e+08  1.483911e+08  1.729543e+08  1.747012e+08   \n","8   138257420.0  1.468448e+08  1.432426e+08  1.444444e+08  1.439571e+08   \n","9    34945469.0  6.703187e+07  8.923779e+07  1.265271e+08  1.297197e+08   \n","10   67705186.0  9.787344e+07  1.125324e+08  1.284556e+08  1.293885e+08   \n","11  117624196.0  1.268039e+08  1.281054e+08  1.232945e+08  1.226314e+08   \n","12   48419546.0  7.795822e+07  9.463670e+07  1.173374e+08  1.191062e+08   \n","13   43748556.0  7.137137e+07  8.725241e+07  1.127166e+08  1.144843e+08   \n","14   26708686.0  4.861632e+07  6.639126e+07  1.022628e+08  1.056251e+08   \n","\n","         pop2030       pop2050        country        area  landAreaKm  \\\n","0   1.514994e+09  1.670491e+09          India   3287590.0   2973190.0   \n","1   1.415606e+09  1.312636e+09          China   9706961.0   9424702.9   \n","2   3.521623e+08  3.753920e+08  United States   9372610.0   9147420.0   \n","3   2.921501e+08  3.172252e+08      Indonesia   1904569.0   1877519.0   \n","4   2.740298e+08  3.678085e+08       Pakistan    881912.0    770880.0   \n","5   2.625804e+08  3.774599e+08        Nigeria    923768.0    910770.0   \n","6   2.239090e+08  2.308857e+08         Brazil   8515767.0   8358140.0   \n","7   1.844241e+08  2.039049e+08     Bangladesh    147570.0    130170.0   \n","8   1.414327e+08  1.331330e+08         Russia  17098242.0  16376870.0   \n","9   1.492964e+08  2.148123e+08       Ethiopia   1104300.0   1128571.3   \n","10  1.345341e+08  1.437724e+08         Mexico   1964375.0   1943950.0   \n","11  1.185148e+08  1.037844e+08          Japan    377930.0    364500.0   \n","12  1.294533e+08  1.578916e+08    Philippines    342353.0    298170.0   \n","13  1.251517e+08  1.603399e+08          Egypt   1002450.0    995450.0   \n","14  1.275821e+08  2.174940e+08       DR Congo   2344858.0   2267050.0   \n","\n","    netChange  growthRate  worldPercentage    density  rank  \n","0      0.4114      0.0092           0.1801   484.9067     1  \n","1     -0.0199     -0.0003           0.1780   151.2174     2  \n","2      0.0571      0.0053           0.0427    37.3673     3  \n","3      0.0707      0.0082           0.0350   149.0254     4  \n","4      0.1499      0.0196           0.0306   318.0908     5  \n","5      0.1709      0.0239           0.0286   251.6027     6  \n","6      0.0377      0.0056           0.0272    26.0390     7  \n","7      0.0550      0.0101           0.0218  1342.1004     8  \n","8     -0.0151     -0.0034           0.0180     8.7903     9  \n","9      0.1016      0.0252           0.0162   114.9415    10  \n","10     0.0292      0.0073           0.0162    66.5596    11  \n","11    -0.0211     -0.0054           0.0153   336.4374    12  \n","12     0.0560      0.0151           0.0149   399.4574    13  \n","13     0.0569      0.0157           0.0143   115.0075    14  \n","14     0.1081      0.0329           0.0132    46.5914    15  "],"text/html":["\n","  <div id=\"df-62fadd60-1032-4c9a-a46b-34cec6288200\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>696828385.0</td>\n","      <td>1.059634e+09</td>\n","      <td>1.240614e+09</td>\n","      <td>1.428628e+09</td>\n","      <td>1.441720e+09</td>\n","      <td>1.514994e+09</td>\n","      <td>1.670491e+09</td>\n","      <td>India</td>\n","      <td>3287590.0</td>\n","      <td>2973190.0</td>\n","      <td>0.4114</td>\n","      <td>0.0092</td>\n","      <td>0.1801</td>\n","      <td>484.9067</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>982372466.0</td>\n","      <td>1.264099e+09</td>\n","      <td>1.348191e+09</td>\n","      <td>1.425671e+09</td>\n","      <td>1.425179e+09</td>\n","      <td>1.415606e+09</td>\n","      <td>1.312636e+09</td>\n","      <td>China</td>\n","      <td>9706961.0</td>\n","      <td>9424702.9</td>\n","      <td>-0.0199</td>\n","      <td>-0.0003</td>\n","      <td>0.1780</td>\n","      <td>151.2174</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>223140018.0</td>\n","      <td>2.823986e+08</td>\n","      <td>3.111828e+08</td>\n","      <td>3.399966e+08</td>\n","      <td>3.418144e+08</td>\n","      <td>3.521623e+08</td>\n","      <td>3.753920e+08</td>\n","      <td>United States</td>\n","      <td>9372610.0</td>\n","      <td>9147420.0</td>\n","      <td>0.0571</td>\n","      <td>0.0053</td>\n","      <td>0.0427</td>\n","      <td>37.3673</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>148177096.0</td>\n","      <td>2.140724e+08</td>\n","      <td>2.440162e+08</td>\n","      <td>2.775341e+08</td>\n","      <td>2.797980e+08</td>\n","      <td>2.921501e+08</td>\n","      <td>3.172252e+08</td>\n","      <td>Indonesia</td>\n","      <td>1904569.0</td>\n","      <td>1877519.0</td>\n","      <td>0.0707</td>\n","      <td>0.0082</td>\n","      <td>0.0350</td>\n","      <td>149.0254</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>80624057.0</td>\n","      <td>1.543699e+08</td>\n","      <td>1.944545e+08</td>\n","      <td>2.404857e+08</td>\n","      <td>2.452098e+08</td>\n","      <td>2.740298e+08</td>\n","      <td>3.678085e+08</td>\n","      <td>Pakistan</td>\n","      <td>881912.0</td>\n","      <td>770880.0</td>\n","      <td>0.1499</td>\n","      <td>0.0196</td>\n","      <td>0.0306</td>\n","      <td>318.0908</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>72951439.0</td>\n","      <td>1.228520e+08</td>\n","      <td>1.609529e+08</td>\n","      <td>2.238046e+08</td>\n","      <td>2.291522e+08</td>\n","      <td>2.625804e+08</td>\n","      <td>3.774599e+08</td>\n","      <td>Nigeria</td>\n","      <td>923768.0</td>\n","      <td>910770.0</td>\n","      <td>0.1709</td>\n","      <td>0.0239</td>\n","      <td>0.0286</td>\n","      <td>251.6027</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>122288383.0</td>\n","      <td>1.758737e+08</td>\n","      <td>1.963535e+08</td>\n","      <td>2.164224e+08</td>\n","      <td>2.176373e+08</td>\n","      <td>2.239090e+08</td>\n","      <td>2.308857e+08</td>\n","      <td>Brazil</td>\n","      <td>8515767.0</td>\n","      <td>8358140.0</td>\n","      <td>0.0377</td>\n","      <td>0.0056</td>\n","      <td>0.0272</td>\n","      <td>26.0390</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>83929765.0</td>\n","      <td>1.291933e+08</td>\n","      <td>1.483911e+08</td>\n","      <td>1.729543e+08</td>\n","      <td>1.747012e+08</td>\n","      <td>1.844241e+08</td>\n","      <td>2.039049e+08</td>\n","      <td>Bangladesh</td>\n","      <td>147570.0</td>\n","      <td>130170.0</td>\n","      <td>0.0550</td>\n","      <td>0.0101</td>\n","      <td>0.0218</td>\n","      <td>1342.1004</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>138257420.0</td>\n","      <td>1.468448e+08</td>\n","      <td>1.432426e+08</td>\n","      <td>1.444444e+08</td>\n","      <td>1.439571e+08</td>\n","      <td>1.414327e+08</td>\n","      <td>1.331330e+08</td>\n","      <td>Russia</td>\n","      <td>17098242.0</td>\n","      <td>16376870.0</td>\n","      <td>-0.0151</td>\n","      <td>-0.0034</td>\n","      <td>0.0180</td>\n","      <td>8.7903</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>34945469.0</td>\n","      <td>6.703187e+07</td>\n","      <td>8.923779e+07</td>\n","      <td>1.265271e+08</td>\n","      <td>1.297197e+08</td>\n","      <td>1.492964e+08</td>\n","      <td>2.148123e+08</td>\n","      <td>Ethiopia</td>\n","      <td>1104300.0</td>\n","      <td>1128571.3</td>\n","      <td>0.1016</td>\n","      <td>0.0252</td>\n","      <td>0.0162</td>\n","      <td>114.9415</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>67705186.0</td>\n","      <td>9.787344e+07</td>\n","      <td>1.125324e+08</td>\n","      <td>1.284556e+08</td>\n","      <td>1.293885e+08</td>\n","      <td>1.345341e+08</td>\n","      <td>1.437724e+08</td>\n","      <td>Mexico</td>\n","      <td>1964375.0</td>\n","      <td>1943950.0</td>\n","      <td>0.0292</td>\n","      <td>0.0073</td>\n","      <td>0.0162</td>\n","      <td>66.5596</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>117624196.0</td>\n","      <td>1.268039e+08</td>\n","      <td>1.281054e+08</td>\n","      <td>1.232945e+08</td>\n","      <td>1.226314e+08</td>\n","      <td>1.185148e+08</td>\n","      <td>1.037844e+08</td>\n","      <td>Japan</td>\n","      <td>377930.0</td>\n","      <td>364500.0</td>\n","      <td>-0.0211</td>\n","      <td>-0.0054</td>\n","      <td>0.0153</td>\n","      <td>336.4374</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>48419546.0</td>\n","      <td>7.795822e+07</td>\n","      <td>9.463670e+07</td>\n","      <td>1.173374e+08</td>\n","      <td>1.191062e+08</td>\n","      <td>1.294533e+08</td>\n","      <td>1.578916e+08</td>\n","      <td>Philippines</td>\n","      <td>342353.0</td>\n","      <td>298170.0</td>\n","      <td>0.0560</td>\n","      <td>0.0151</td>\n","      <td>0.0149</td>\n","      <td>399.4574</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>43748556.0</td>\n","      <td>7.137137e+07</td>\n","      <td>8.725241e+07</td>\n","      <td>1.127166e+08</td>\n","      <td>1.144843e+08</td>\n","      <td>1.251517e+08</td>\n","      <td>1.603399e+08</td>\n","      <td>Egypt</td>\n","      <td>1002450.0</td>\n","      <td>995450.0</td>\n","      <td>0.0569</td>\n","      <td>0.0157</td>\n","      <td>0.0143</td>\n","      <td>115.0075</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>26708686.0</td>\n","      <td>4.861632e+07</td>\n","      <td>6.639126e+07</td>\n","      <td>1.022628e+08</td>\n","      <td>1.056251e+08</td>\n","      <td>1.275821e+08</td>\n","      <td>2.174940e+08</td>\n","      <td>DR Congo</td>\n","      <td>2344858.0</td>\n","      <td>2267050.0</td>\n","      <td>0.1081</td>\n","      <td>0.0329</td>\n","      <td>0.0132</td>\n","      <td>46.5914</td>\n","      <td>15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62fadd60-1032-4c9a-a46b-34cec6288200')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62fadd60-1032-4c9a-a46b-34cec6288200 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62fadd60-1032-4c9a-a46b-34cec6288200');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bd9b2c4-656e-4c27-bbea-20e796599c28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bd9b2c4-656e-4c27-bbea-20e796599c28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bd9b2c4-656e-4c27-bbea-20e796599c28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["world_pop.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"fLVmwGppxHvr","executionInfo":{"status":"ok","timestamp":1706640725708,"user_tz":-180,"elapsed":23,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"47a510fd-a5b8-43ac-fb89-64ff27b25bae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     pop1980  pop2000  pop2010  pop2023  pop2024  pop2030  pop2050  \\\n","229  11452.0   5138.0   4938.0   4386.0   4372.0   4301.0   3781.0   \n","230   2240.0   3080.0   3187.0   3791.0   3803.0   3869.0   3779.0   \n","231   3637.0   2074.0   1812.0   1935.0   1935.0   1948.0   2096.0   \n","232   1647.0   1666.0   1367.0   1893.0   1915.0   2046.0   2430.0   \n","233    733.0    651.0    596.0    518.0    526.0    561.0    731.0   \n","\n","              country      area  landAreaKm  netChange  growthRate  \\\n","229        Montserrat    102.00      102.00        NaN     -0.0032   \n","230  Falkland Islands  12173.00    12173.00        NaN      0.0032   \n","231              Niue    261.00      261.00        0.0      0.0000   \n","232           Tokelau     12.00       10.00        NaN      0.0116   \n","233      Vatican City      0.44        0.44        NaN      0.0154   \n","\n","     worldPercentage    density  rank  \n","229              NaN    42.8627   230  \n","230              NaN     0.3124   231  \n","231              NaN     7.4138   232  \n","232              NaN   191.5000   233  \n","233              NaN  1195.4545   234  "],"text/html":["\n","  <div id=\"df-583f7baa-fc3c-4400-ad1e-6ad55b4bf660\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>country</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>netChange</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>density</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>229</th>\n","      <td>11452.0</td>\n","      <td>5138.0</td>\n","      <td>4938.0</td>\n","      <td>4386.0</td>\n","      <td>4372.0</td>\n","      <td>4301.0</td>\n","      <td>3781.0</td>\n","      <td>Montserrat</td>\n","      <td>102.00</td>\n","      <td>102.00</td>\n","      <td>NaN</td>\n","      <td>-0.0032</td>\n","      <td>NaN</td>\n","      <td>42.8627</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>2240.0</td>\n","      <td>3080.0</td>\n","      <td>3187.0</td>\n","      <td>3791.0</td>\n","      <td>3803.0</td>\n","      <td>3869.0</td>\n","      <td>3779.0</td>\n","      <td>Falkland Islands</td>\n","      <td>12173.00</td>\n","      <td>12173.00</td>\n","      <td>NaN</td>\n","      <td>0.0032</td>\n","      <td>NaN</td>\n","      <td>0.3124</td>\n","      <td>231</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>3637.0</td>\n","      <td>2074.0</td>\n","      <td>1812.0</td>\n","      <td>1935.0</td>\n","      <td>1935.0</td>\n","      <td>1948.0</td>\n","      <td>2096.0</td>\n","      <td>Niue</td>\n","      <td>261.00</td>\n","      <td>261.00</td>\n","      <td>0.0</td>\n","      <td>0.0000</td>\n","      <td>NaN</td>\n","      <td>7.4138</td>\n","      <td>232</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>1647.0</td>\n","      <td>1666.0</td>\n","      <td>1367.0</td>\n","      <td>1893.0</td>\n","      <td>1915.0</td>\n","      <td>2046.0</td>\n","      <td>2430.0</td>\n","      <td>Tokelau</td>\n","      <td>12.00</td>\n","      <td>10.00</td>\n","      <td>NaN</td>\n","      <td>0.0116</td>\n","      <td>NaN</td>\n","      <td>191.5000</td>\n","      <td>233</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>733.0</td>\n","      <td>651.0</td>\n","      <td>596.0</td>\n","      <td>518.0</td>\n","      <td>526.0</td>\n","      <td>561.0</td>\n","      <td>731.0</td>\n","      <td>Vatican City</td>\n","      <td>0.44</td>\n","      <td>0.44</td>\n","      <td>NaN</td>\n","      <td>0.0154</td>\n","      <td>NaN</td>\n","      <td>1195.4545</td>\n","      <td>234</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-583f7baa-fc3c-4400-ad1e-6ad55b4bf660')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-583f7baa-fc3c-4400-ad1e-6ad55b4bf660 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-583f7baa-fc3c-4400-ad1e-6ad55b4bf660');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c667bfe0-cd7d-46a5-975c-f0cf9b98a2d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c667bfe0-cd7d-46a5-975c-f0cf9b98a2d5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c667bfe0-cd7d-46a5-975c-f0cf9b98a2d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["print(f\"No. of columns: \", len(world_pop.columns)) # some str formatting\n","world_pop.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Un8PJt5wTUHf","executionInfo":{"status":"ok","timestamp":1706640725708,"user_tz":-180,"elapsed":22,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"52256003-7b70-43d4-cba9-c41eccecbea7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["No. of columns:  15\n"]},{"output_type":"execute_result","data":{"text/plain":["Index(['pop1980', 'pop2000', 'pop2010', 'pop2023', 'pop2024', 'pop2030',\n","       'pop2050', 'country', 'area', 'landAreaKm', 'netChange', 'growthRate',\n","       'worldPercentage', 'density', 'rank'],\n","      dtype='object')"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["len(world_pop.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"91d2atx_u4Rm","executionInfo":{"status":"ok","timestamp":1706640726383,"user_tz":-180,"elapsed":695,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"c223fe8c-91dd-46fa-8466-f638b9f457d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["world_pop.shape # (rows, cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zQ0v1t5ovLNE","executionInfo":{"status":"ok","timestamp":1706640726383,"user_tz":-180,"elapsed":46,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"a2a401e0-dcc8-444f-c6c7-e8d640c5289e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(234, 15)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["**Observations**  \n","The dataset now has 15 columns:\n","- pop1980: population in 1980\n","- pop2000: population in 2000\n","- pop2010: population in 2010\n","- pop2023: population in 2023\n","- pop2024: current population as at 8th January, 2024\n","- pop2030: projected population for 2030\n","- pop2050: projected population for 2050\n","- country: name of the country\n","- area: area of the country in km^2\n","- landAreaKm: land area in km^2\n","- netChange:\n","- growthRate:\n","- worldPercentage:\n","- density:\n","- rank\n","\n","Next, we change the order of the columns so that country names come first followed by population for different years."],"metadata":{"id":"QGXs98xLf9EJ"}},{"cell_type":"code","source":["world_pop.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E0BQb3mEykOO","executionInfo":{"status":"ok","timestamp":1706640726383,"user_tz":-180,"elapsed":42,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"2bcad6fb-279a-4d68-a2d5-b6163b672094"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['pop1980', 'pop2000', 'pop2010', 'pop2023', 'pop2024', 'pop2030',\n","       'pop2050', 'country', 'area', 'landAreaKm', 'netChange', 'growthRate',\n","       'worldPercentage', 'density', 'rank'],\n","      dtype='object')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["columns_order = [\"country\", \"pop1980\",\t\"pop2000\",\t\"pop2010\",\t\"pop2023\",\t\"pop2024\",\t\"pop2030\",\n","                 \"pop2050\", \"area\", \"landAreaKm\", \"density\", \"growthRate\", \"worldPercentage\",\n","                 \"netChange\", \"rank\"]\n","\n","world_pop = world_pop.reindex(columns=columns_order)\n","world_pop.tail(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":818},"id":"guwyr_QYSmuw","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":41,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"27b536ba-cf4c-4742-a0ca-8eb6131995d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       country  pop1980  pop2000  pop2010  pop2023  pop2024  \\\n","214           Marshall Islands  31988.0  54224.0  53416.0  41996.0  42415.0   \n","215              Liechtenstein  25003.0  33026.0  35926.0  39584.0  39822.0   \n","216                     Monaco  27076.0  32465.0  33178.0  36297.0  36157.0   \n","217                 San Marino  21346.0  26823.0  31608.0  33642.0  33614.0   \n","218                  Gibraltar  28734.0  27741.0  31262.0  32688.0  32718.0   \n","219               Saint Martin   7776.0  29610.0  36458.0  32077.0  32337.0   \n","220     British Virgin Islands  11109.0  20104.0  27556.0  31538.0  31763.0   \n","221                      Palau  12252.0  19726.0  18540.0  18058.0  18051.0   \n","222               Cook Islands  17651.0  15897.0  17212.0  17044.0  17072.0   \n","223                   Anguilla   6560.0  11047.0  13172.0  15899.0  15936.0   \n","224                      Nauru   7635.0  10377.0  10241.0  12780.0  12884.0   \n","225                     Tuvalu   7731.0   9638.0  10550.0  11396.0  11478.0   \n","226          Wallis and Futuna  11315.0  14723.0  13142.0  11502.0  11439.0   \n","227           Saint Barthelemy   2983.0   7082.0   8988.0  10994.0  11019.0   \n","228  Saint Pierre and Miquelon   6106.0   6274.0   6052.0   5840.0   5815.0   \n","229                 Montserrat  11452.0   5138.0   4938.0   4386.0   4372.0   \n","230           Falkland Islands   2240.0   3080.0   3187.0   3791.0   3803.0   \n","231                       Niue   3637.0   2074.0   1812.0   1935.0   1935.0   \n","232                    Tokelau   1647.0   1666.0   1367.0   1893.0   1915.0   \n","233               Vatican City    733.0    651.0    596.0    518.0    526.0   \n","\n","     pop2030  pop2050      area  landAreaKm     density  growthRate  \\\n","214  44733.0  51211.0    181.00      180.00    235.6389      0.0100   \n","215  41030.0  42287.0    160.00      160.00    248.8875      0.0060   \n","216  35862.0  37664.0      2.02        2.00  18078.5000     -0.0039   \n","217  33458.0  32044.0     61.00       60.00    560.2333     -0.0008   \n","218  32771.0  31356.0      6.80        6.80   4811.4706      0.0009   \n","219  33508.0  35453.0     53.00       50.00    646.7400      0.0081   \n","220  32995.0  34768.0    151.00      150.00    211.7533      0.0071   \n","221  17919.0  16689.0    459.00      460.00     39.2413     -0.0004   \n","222  17253.0  17674.0    240.00      240.00     71.1333      0.0016   \n","223  16055.0  15294.0     91.00       91.00    175.1209      0.0023   \n","224  13358.0  14695.0     21.00       20.00    644.2000      0.0081   \n","225  11917.0  13211.0     26.00       30.00    382.6000      0.0072   \n","226  11229.0  11349.0    274.00      274.00     41.7482     -0.0055   \n","227  11113.0  10210.0     21.00       25.00    440.7600      0.0023   \n","228   5651.0   5165.0    242.00      242.00     24.0289     -0.0043   \n","229   4301.0   3781.0    102.00      102.00     42.8627     -0.0032   \n","230   3869.0   3779.0  12173.00    12173.00      0.3124      0.0032   \n","231   1948.0   2096.0    261.00      261.00      7.4138      0.0000   \n","232   2046.0   2430.0     12.00       10.00    191.5000      0.0116   \n","233    561.0    731.0      0.44        0.44   1195.4545      0.0154   \n","\n","     worldPercentage  netChange  rank  \n","214              0.0        0.0   215  \n","215              0.0        0.0   216  \n","216              0.0        0.0   217  \n","217              0.0        NaN   218  \n","218              0.0        NaN   219  \n","219              0.0        0.0   220  \n","220              0.0        0.0   221  \n","221              0.0        NaN   222  \n","222              0.0        0.0   223  \n","223              0.0        0.0   224  \n","224              0.0        0.0   225  \n","225              0.0        0.0   226  \n","226              0.0        0.0   227  \n","227              0.0        NaN   228  \n","228              NaN        NaN   229  \n","229              NaN        NaN   230  \n","230              NaN        NaN   231  \n","231              NaN        0.0   232  \n","232              NaN        NaN   233  \n","233              NaN        NaN   234  "],"text/html":["\n","  <div id=\"df-dd46447b-ba9f-4e61-a9bf-9775368ee52c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>density</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>netChange</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>214</th>\n","      <td>Marshall Islands</td>\n","      <td>31988.0</td>\n","      <td>54224.0</td>\n","      <td>53416.0</td>\n","      <td>41996.0</td>\n","      <td>42415.0</td>\n","      <td>44733.0</td>\n","      <td>51211.0</td>\n","      <td>181.00</td>\n","      <td>180.00</td>\n","      <td>235.6389</td>\n","      <td>0.0100</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>215</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>Liechtenstein</td>\n","      <td>25003.0</td>\n","      <td>33026.0</td>\n","      <td>35926.0</td>\n","      <td>39584.0</td>\n","      <td>39822.0</td>\n","      <td>41030.0</td>\n","      <td>42287.0</td>\n","      <td>160.00</td>\n","      <td>160.00</td>\n","      <td>248.8875</td>\n","      <td>0.0060</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>216</td>\n","    </tr>\n","    <tr>\n","      <th>216</th>\n","      <td>Monaco</td>\n","      <td>27076.0</td>\n","      <td>32465.0</td>\n","      <td>33178.0</td>\n","      <td>36297.0</td>\n","      <td>36157.0</td>\n","      <td>35862.0</td>\n","      <td>37664.0</td>\n","      <td>2.02</td>\n","      <td>2.00</td>\n","      <td>18078.5000</td>\n","      <td>-0.0039</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>217</td>\n","    </tr>\n","    <tr>\n","      <th>217</th>\n","      <td>San Marino</td>\n","      <td>21346.0</td>\n","      <td>26823.0</td>\n","      <td>31608.0</td>\n","      <td>33642.0</td>\n","      <td>33614.0</td>\n","      <td>33458.0</td>\n","      <td>32044.0</td>\n","      <td>61.00</td>\n","      <td>60.00</td>\n","      <td>560.2333</td>\n","      <td>-0.0008</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>218</td>\n","    </tr>\n","    <tr>\n","      <th>218</th>\n","      <td>Gibraltar</td>\n","      <td>28734.0</td>\n","      <td>27741.0</td>\n","      <td>31262.0</td>\n","      <td>32688.0</td>\n","      <td>32718.0</td>\n","      <td>32771.0</td>\n","      <td>31356.0</td>\n","      <td>6.80</td>\n","      <td>6.80</td>\n","      <td>4811.4706</td>\n","      <td>0.0009</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>219</td>\n","    </tr>\n","    <tr>\n","      <th>219</th>\n","      <td>Saint Martin</td>\n","      <td>7776.0</td>\n","      <td>29610.0</td>\n","      <td>36458.0</td>\n","      <td>32077.0</td>\n","      <td>32337.0</td>\n","      <td>33508.0</td>\n","      <td>35453.0</td>\n","      <td>53.00</td>\n","      <td>50.00</td>\n","      <td>646.7400</td>\n","      <td>0.0081</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>220</td>\n","    </tr>\n","    <tr>\n","      <th>220</th>\n","      <td>British Virgin Islands</td>\n","      <td>11109.0</td>\n","      <td>20104.0</td>\n","      <td>27556.0</td>\n","      <td>31538.0</td>\n","      <td>31763.0</td>\n","      <td>32995.0</td>\n","      <td>34768.0</td>\n","      <td>151.00</td>\n","      <td>150.00</td>\n","      <td>211.7533</td>\n","      <td>0.0071</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>221</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>Palau</td>\n","      <td>12252.0</td>\n","      <td>19726.0</td>\n","      <td>18540.0</td>\n","      <td>18058.0</td>\n","      <td>18051.0</td>\n","      <td>17919.0</td>\n","      <td>16689.0</td>\n","      <td>459.00</td>\n","      <td>460.00</td>\n","      <td>39.2413</td>\n","      <td>-0.0004</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>222</td>\n","    </tr>\n","    <tr>\n","      <th>222</th>\n","      <td>Cook Islands</td>\n","      <td>17651.0</td>\n","      <td>15897.0</td>\n","      <td>17212.0</td>\n","      <td>17044.0</td>\n","      <td>17072.0</td>\n","      <td>17253.0</td>\n","      <td>17674.0</td>\n","      <td>240.00</td>\n","      <td>240.00</td>\n","      <td>71.1333</td>\n","      <td>0.0016</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>223</td>\n","    </tr>\n","    <tr>\n","      <th>223</th>\n","      <td>Anguilla</td>\n","      <td>6560.0</td>\n","      <td>11047.0</td>\n","      <td>13172.0</td>\n","      <td>15899.0</td>\n","      <td>15936.0</td>\n","      <td>16055.0</td>\n","      <td>15294.0</td>\n","      <td>91.00</td>\n","      <td>91.00</td>\n","      <td>175.1209</td>\n","      <td>0.0023</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>224</td>\n","    </tr>\n","    <tr>\n","      <th>224</th>\n","      <td>Nauru</td>\n","      <td>7635.0</td>\n","      <td>10377.0</td>\n","      <td>10241.0</td>\n","      <td>12780.0</td>\n","      <td>12884.0</td>\n","      <td>13358.0</td>\n","      <td>14695.0</td>\n","      <td>21.00</td>\n","      <td>20.00</td>\n","      <td>644.2000</td>\n","      <td>0.0081</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>225</td>\n","    </tr>\n","    <tr>\n","      <th>225</th>\n","      <td>Tuvalu</td>\n","      <td>7731.0</td>\n","      <td>9638.0</td>\n","      <td>10550.0</td>\n","      <td>11396.0</td>\n","      <td>11478.0</td>\n","      <td>11917.0</td>\n","      <td>13211.0</td>\n","      <td>26.00</td>\n","      <td>30.00</td>\n","      <td>382.6000</td>\n","      <td>0.0072</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>226</td>\n","    </tr>\n","    <tr>\n","      <th>226</th>\n","      <td>Wallis and Futuna</td>\n","      <td>11315.0</td>\n","      <td>14723.0</td>\n","      <td>13142.0</td>\n","      <td>11502.0</td>\n","      <td>11439.0</td>\n","      <td>11229.0</td>\n","      <td>11349.0</td>\n","      <td>274.00</td>\n","      <td>274.00</td>\n","      <td>41.7482</td>\n","      <td>-0.0055</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>227</td>\n","    </tr>\n","    <tr>\n","      <th>227</th>\n","      <td>Saint Barthelemy</td>\n","      <td>2983.0</td>\n","      <td>7082.0</td>\n","      <td>8988.0</td>\n","      <td>10994.0</td>\n","      <td>11019.0</td>\n","      <td>11113.0</td>\n","      <td>10210.0</td>\n","      <td>21.00</td>\n","      <td>25.00</td>\n","      <td>440.7600</td>\n","      <td>0.0023</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>228</td>\n","    </tr>\n","    <tr>\n","      <th>228</th>\n","      <td>Saint Pierre and Miquelon</td>\n","      <td>6106.0</td>\n","      <td>6274.0</td>\n","      <td>6052.0</td>\n","      <td>5840.0</td>\n","      <td>5815.0</td>\n","      <td>5651.0</td>\n","      <td>5165.0</td>\n","      <td>242.00</td>\n","      <td>242.00</td>\n","      <td>24.0289</td>\n","      <td>-0.0043</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>229</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>Montserrat</td>\n","      <td>11452.0</td>\n","      <td>5138.0</td>\n","      <td>4938.0</td>\n","      <td>4386.0</td>\n","      <td>4372.0</td>\n","      <td>4301.0</td>\n","      <td>3781.0</td>\n","      <td>102.00</td>\n","      <td>102.00</td>\n","      <td>42.8627</td>\n","      <td>-0.0032</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>230</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>Falkland Islands</td>\n","      <td>2240.0</td>\n","      <td>3080.0</td>\n","      <td>3187.0</td>\n","      <td>3791.0</td>\n","      <td>3803.0</td>\n","      <td>3869.0</td>\n","      <td>3779.0</td>\n","      <td>12173.00</td>\n","      <td>12173.00</td>\n","      <td>0.3124</td>\n","      <td>0.0032</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>231</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>Niue</td>\n","      <td>3637.0</td>\n","      <td>2074.0</td>\n","      <td>1812.0</td>\n","      <td>1935.0</td>\n","      <td>1935.0</td>\n","      <td>1948.0</td>\n","      <td>2096.0</td>\n","      <td>261.00</td>\n","      <td>261.00</td>\n","      <td>7.4138</td>\n","      <td>0.0000</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>232</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>Tokelau</td>\n","      <td>1647.0</td>\n","      <td>1666.0</td>\n","      <td>1367.0</td>\n","      <td>1893.0</td>\n","      <td>1915.0</td>\n","      <td>2046.0</td>\n","      <td>2430.0</td>\n","      <td>12.00</td>\n","      <td>10.00</td>\n","      <td>191.5000</td>\n","      <td>0.0116</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>233</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>Vatican City</td>\n","      <td>733.0</td>\n","      <td>651.0</td>\n","      <td>596.0</td>\n","      <td>518.0</td>\n","      <td>526.0</td>\n","      <td>561.0</td>\n","      <td>731.0</td>\n","      <td>0.44</td>\n","      <td>0.44</td>\n","      <td>1195.4545</td>\n","      <td>0.0154</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>234</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd46447b-ba9f-4e61-a9bf-9775368ee52c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd46447b-ba9f-4e61-a9bf-9775368ee52c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd46447b-ba9f-4e61-a9bf-9775368ee52c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-42e20ca5-95d0-41e0-a234-c07a1621d039\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42e20ca5-95d0-41e0-a234-c07a1621d039')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-42e20ca5-95d0-41e0-a234-c07a1621d039 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["### **6. Missing and Duplicates Values**\n","- Missing data can affect data quality.\n","- When"],"metadata":{"id":"mBdpLS5Blhx_"}},{"cell_type":"code","source":["world_pop.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y8EgF6gDaAQk","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":40,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"984ee01c-4de5-412c-b0d0-ff63e9c1b8e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 234 entries, 0 to 233\n","Data columns (total 15 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   country          234 non-null    object \n"," 1   pop1980          234 non-null    float64\n"," 2   pop2000          234 non-null    float64\n"," 3   pop2010          234 non-null    float64\n"," 4   pop2023          234 non-null    float64\n"," 5   pop2024          234 non-null    float64\n"," 6   pop2030          234 non-null    float64\n"," 7   pop2050          234 non-null    float64\n"," 8   area             234 non-null    float64\n"," 9   landAreaKm       234 non-null    float64\n"," 10  density          234 non-null    float64\n"," 11  growthRate       234 non-null    float64\n"," 12  worldPercentage  228 non-null    float64\n"," 13  netChange        224 non-null    float64\n"," 14  rank             234 non-null    int64  \n","dtypes: float64(13), int64(1), object(1)\n","memory usage: 27.5+ KB\n"]}]},{"cell_type":"markdown","source":["#### **a. `.isnull()`**"],"metadata":{"id":"em3fTV1BXUmL"}},{"cell_type":"code","source":["# check for Null values\n","world_pop.isnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"t9Ao3XQ9qfKX","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":25,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"d26a300d-4353-4b0f-de9d-a6cf2efb2d9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     country  pop1980  pop2000  pop2010  pop2023  pop2024  pop2030  pop2050  \\\n","0      False    False    False    False    False    False    False    False   \n","1      False    False    False    False    False    False    False    False   \n","2      False    False    False    False    False    False    False    False   \n","3      False    False    False    False    False    False    False    False   \n","4      False    False    False    False    False    False    False    False   \n","..       ...      ...      ...      ...      ...      ...      ...      ...   \n","229    False    False    False    False    False    False    False    False   \n","230    False    False    False    False    False    False    False    False   \n","231    False    False    False    False    False    False    False    False   \n","232    False    False    False    False    False    False    False    False   \n","233    False    False    False    False    False    False    False    False   \n","\n","      area  landAreaKm  density  growthRate  worldPercentage  netChange   rank  \n","0    False       False    False       False            False      False  False  \n","1    False       False    False       False            False      False  False  \n","2    False       False    False       False            False      False  False  \n","3    False       False    False       False            False      False  False  \n","4    False       False    False       False            False      False  False  \n","..     ...         ...      ...         ...              ...        ...    ...  \n","229  False       False    False       False             True       True  False  \n","230  False       False    False       False             True       True  False  \n","231  False       False    False       False             True      False  False  \n","232  False       False    False       False             True       True  False  \n","233  False       False    False       False             True       True  False  \n","\n","[234 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-e18d19d2-6730-4834-831a-0cd70bc3ffcb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>density</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>netChange</th>\n","      <th>rank</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>234 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e18d19d2-6730-4834-831a-0cd70bc3ffcb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e18d19d2-6730-4834-831a-0cd70bc3ffcb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e18d19d2-6730-4834-831a-0cd70bc3ffcb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5ae0ec58-57ec-434e-b357-49dfacca4f56\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ae0ec58-57ec-434e-b357-49dfacca4f56')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5ae0ec58-57ec-434e-b357-49dfacca4f56 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["print(world_pop.isnull().any())"],"metadata":{"id":"bheIH84lkXph","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":23,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"9fdb824d-ce6d-4811-c0e5-812d541d2847"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["country            False\n","pop1980            False\n","pop2000            False\n","pop2010            False\n","pop2023            False\n","pop2024            False\n","pop2030            False\n","pop2050            False\n","area               False\n","landAreaKm         False\n","density            False\n","growthRate         False\n","worldPercentage     True\n","netChange           True\n","rank               False\n","dtype: bool\n"]}]},{"cell_type":"markdown","source":["#### **b. `.isna()`**"],"metadata":{"id":"ceeVUOuKXcGE"}},{"cell_type":"code","source":["world_pop.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jdCTKeJxMo-c","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":18,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"e66f772b-510b-4b65-af1f-cf1a06012978"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country             0\n","pop1980             0\n","pop2000             0\n","pop2010             0\n","pop2023             0\n","pop2024             0\n","pop2030             0\n","pop2050             0\n","area                0\n","landAreaKm          0\n","density             0\n","growthRate          0\n","worldPercentage     6\n","netChange          10\n","rank                0\n","dtype: int64"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["#### **c. `.fillna()`**"],"metadata":{"id":"KEsV6I-QXj54"}},{"cell_type":"code","source":["world_pop[\"worldPercentage\"].fillna(0,inplace = True)\n","world_pop[\"netChange\"].fillna(0,inplace = True)\n","world_pop.isna().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J4pz3cyXt34Y","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":15,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"e66ce69d-db07-4af9-a214-7c0e75ee5b7e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country            0\n","pop1980            0\n","pop2000            0\n","pop2010            0\n","pop2023            0\n","pop2024            0\n","pop2030            0\n","pop2050            0\n","area               0\n","landAreaKm         0\n","density            0\n","growthRate         0\n","worldPercentage    0\n","netChange          0\n","rank               0\n","dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["#### **d. `.duplicated()`**"],"metadata":{"id":"eiZa0JOnXpLZ"}},{"cell_type":"code","source":["world_pop.duplicated().any()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PZGchufvnPqO","executionInfo":{"status":"ok","timestamp":1706640726384,"user_tz":-180,"elapsed":11,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"de91eaaa-ecff-4107-9114-62678473f541"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["world_pop.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dn2-yLCBjhdb","executionInfo":{"status":"ok","timestamp":1706640763679,"user_tz":-180,"elapsed":533,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"c4b57f2f-5d43-494e-8faf-5a57a0c6ad7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["world_pop.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e_dP7QmUt3Y8","executionInfo":{"status":"ok","timestamp":1706640777289,"user_tz":-180,"elapsed":500,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"aa99ad5d-3042-4498-f3dc-b2bb82d58cff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 234 entries, 0 to 233\n","Data columns (total 15 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   country          234 non-null    object \n"," 1   pop1980          234 non-null    float64\n"," 2   pop2000          234 non-null    float64\n"," 3   pop2010          234 non-null    float64\n"," 4   pop2023          234 non-null    float64\n"," 5   pop2024          234 non-null    float64\n"," 6   pop2030          234 non-null    float64\n"," 7   pop2050          234 non-null    float64\n"," 8   area             234 non-null    float64\n"," 9   landAreaKm       234 non-null    float64\n"," 10  density          234 non-null    float64\n"," 11  growthRate       234 non-null    float64\n"," 12  worldPercentage  234 non-null    float64\n"," 13  netChange        234 non-null    float64\n"," 14  rank             234 non-null    int64  \n","dtypes: float64(13), int64(1), object(1)\n","memory usage: 27.5+ KB\n"]}]},{"cell_type":"markdown","source":["## **Assignment: Change column names and make them title case**\n","For example, `pop2023` to `Population 2023`"],"metadata":{"id":"A5B78aJnuQnD"}},{"cell_type":"code","source":[],"metadata":{"id":"QUby-fdt-e_n","executionInfo":{"status":"ok","timestamp":1706679331207,"user_tz":-180,"elapsed":414,"user":{"displayName":"jane keshi","userId":"04758231975022323396"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UH5YIoJo-sOp","executionInfo":{"status":"ok","timestamp":1706679339017,"user_tz":-180,"elapsed":411,"user":{"displayName":"jane keshi","userId":"04758231975022323396"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["## **Descriptive Statistics**"],"metadata":{"id":"cjB888DivjuC"}},{"cell_type":"markdown","source":["### **1. `.describe()`**\n","- Summarizes descriptive statistics such as the central tendency, dispersion and shape of a dataset’s distribution, excluding NaN values.  \n","\n","[Info](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe)"],"metadata":{"id":"odQ_JpNcZDFy"}},{"cell_type":"code","source":["world_pop.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":508},"id":"xEinMz5sZohZ","executionInfo":{"status":"ok","timestamp":1706641616492,"user_tz":-180,"elapsed":414,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"82b60d56-8800-4229-cd81-d0813a304cba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 count          mean           std       min            25%  \\\n","pop1980          234.0  1.898462e+07  8.178519e+07  733.0000  229614.250000   \n","pop2000          234.0  2.626947e+07  1.116982e+08  651.0000  327242.000000   \n","pop2010          234.0  2.984524e+07  1.242185e+08  596.0000  393149.000000   \n","pop2023          234.0  3.437442e+07  1.373864e+08  518.0000  422598.250000   \n","pop2024          234.0  3.468862e+07  1.380750e+08  526.0000  426456.500000   \n","pop2030          234.0  3.651461e+07  1.417827e+08  561.0000  456149.000000   \n","pop2050          234.0  4.148628e+07  1.481676e+08  731.0000  546605.750000   \n","area             234.0  5.814500e+05  1.761841e+06    0.4400    2650.000000   \n","landAreaKm       234.0  5.571123e+05  1.689972e+06    0.4400    2625.875000   \n","density          234.0  4.538142e+02  1.990152e+03    0.1384      39.801175   \n","growthRate       234.0  9.200427e-03  1.137134e-02   -0.0309       0.001925   \n","worldPercentage  234.0  4.332479e-03  1.724727e-02    0.0000       0.000100   \n","netChange        234.0  9.955556e-03  3.392928e-02   -0.0224       0.000000   \n","rank             234.0  1.175000e+02  6.769417e+01    1.0000      59.250000   \n","\n","                          50%           75%           max  \n","pop1980          3.141146e+06  9.826054e+06  9.823725e+08  \n","pop2000          4.292907e+06  1.576230e+07  1.264099e+09  \n","pop2010          4.942770e+06  1.915957e+07  1.348191e+09  \n","pop2023          5.643895e+06  2.324537e+07  1.428628e+09  \n","pop2024          5.626359e+06  2.392272e+07  1.441720e+09  \n","pop2030          6.178231e+06  2.616311e+07  1.514994e+09  \n","pop2050          6.352397e+06  3.568614e+07  1.670491e+09  \n","area             8.119950e+04  4.304258e+05  1.709824e+07  \n","landAreaKm       7.568925e+04  4.047876e+05  1.637687e+07  \n","density          9.828740e+01  2.482232e+02  2.167422e+04  \n","growthRate       7.950000e-03  1.567500e-02  4.830000e-02  \n","worldPercentage  7.000000e-04  3.000000e-03  1.801000e-01  \n","netChange        6.000000e-04  7.250000e-03  4.114000e-01  \n","rank             1.175000e+02  1.757500e+02  2.340000e+02  "],"text/html":["\n","  <div id=\"df-f0934892-e8f1-4a5b-97a4-e5624374826f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pop1980</th>\n","      <td>234.0</td>\n","      <td>1.898462e+07</td>\n","      <td>8.178519e+07</td>\n","      <td>733.0000</td>\n","      <td>229614.250000</td>\n","      <td>3.141146e+06</td>\n","      <td>9.826054e+06</td>\n","      <td>9.823725e+08</td>\n","    </tr>\n","    <tr>\n","      <th>pop2000</th>\n","      <td>234.0</td>\n","      <td>2.626947e+07</td>\n","      <td>1.116982e+08</td>\n","      <td>651.0000</td>\n","      <td>327242.000000</td>\n","      <td>4.292907e+06</td>\n","      <td>1.576230e+07</td>\n","      <td>1.264099e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2010</th>\n","      <td>234.0</td>\n","      <td>2.984524e+07</td>\n","      <td>1.242185e+08</td>\n","      <td>596.0000</td>\n","      <td>393149.000000</td>\n","      <td>4.942770e+06</td>\n","      <td>1.915957e+07</td>\n","      <td>1.348191e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2023</th>\n","      <td>234.0</td>\n","      <td>3.437442e+07</td>\n","      <td>1.373864e+08</td>\n","      <td>518.0000</td>\n","      <td>422598.250000</td>\n","      <td>5.643895e+06</td>\n","      <td>2.324537e+07</td>\n","      <td>1.428628e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2024</th>\n","      <td>234.0</td>\n","      <td>3.468862e+07</td>\n","      <td>1.380750e+08</td>\n","      <td>526.0000</td>\n","      <td>426456.500000</td>\n","      <td>5.626359e+06</td>\n","      <td>2.392272e+07</td>\n","      <td>1.441720e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2030</th>\n","      <td>234.0</td>\n","      <td>3.651461e+07</td>\n","      <td>1.417827e+08</td>\n","      <td>561.0000</td>\n","      <td>456149.000000</td>\n","      <td>6.178231e+06</td>\n","      <td>2.616311e+07</td>\n","      <td>1.514994e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2050</th>\n","      <td>234.0</td>\n","      <td>4.148628e+07</td>\n","      <td>1.481676e+08</td>\n","      <td>731.0000</td>\n","      <td>546605.750000</td>\n","      <td>6.352397e+06</td>\n","      <td>3.568614e+07</td>\n","      <td>1.670491e+09</td>\n","    </tr>\n","    <tr>\n","      <th>area</th>\n","      <td>234.0</td>\n","      <td>5.814500e+05</td>\n","      <td>1.761841e+06</td>\n","      <td>0.4400</td>\n","      <td>2650.000000</td>\n","      <td>8.119950e+04</td>\n","      <td>4.304258e+05</td>\n","      <td>1.709824e+07</td>\n","    </tr>\n","    <tr>\n","      <th>landAreaKm</th>\n","      <td>234.0</td>\n","      <td>5.571123e+05</td>\n","      <td>1.689972e+06</td>\n","      <td>0.4400</td>\n","      <td>2625.875000</td>\n","      <td>7.568925e+04</td>\n","      <td>4.047876e+05</td>\n","      <td>1.637687e+07</td>\n","    </tr>\n","    <tr>\n","      <th>density</th>\n","      <td>234.0</td>\n","      <td>4.538142e+02</td>\n","      <td>1.990152e+03</td>\n","      <td>0.1384</td>\n","      <td>39.801175</td>\n","      <td>9.828740e+01</td>\n","      <td>2.482232e+02</td>\n","      <td>2.167422e+04</td>\n","    </tr>\n","    <tr>\n","      <th>growthRate</th>\n","      <td>234.0</td>\n","      <td>9.200427e-03</td>\n","      <td>1.137134e-02</td>\n","      <td>-0.0309</td>\n","      <td>0.001925</td>\n","      <td>7.950000e-03</td>\n","      <td>1.567500e-02</td>\n","      <td>4.830000e-02</td>\n","    </tr>\n","    <tr>\n","      <th>worldPercentage</th>\n","      <td>234.0</td>\n","      <td>4.332479e-03</td>\n","      <td>1.724727e-02</td>\n","      <td>0.0000</td>\n","      <td>0.000100</td>\n","      <td>7.000000e-04</td>\n","      <td>3.000000e-03</td>\n","      <td>1.801000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>netChange</th>\n","      <td>234.0</td>\n","      <td>9.955556e-03</td>\n","      <td>3.392928e-02</td>\n","      <td>-0.0224</td>\n","      <td>0.000000</td>\n","      <td>6.000000e-04</td>\n","      <td>7.250000e-03</td>\n","      <td>4.114000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>rank</th>\n","      <td>234.0</td>\n","      <td>1.175000e+02</td>\n","      <td>6.769417e+01</td>\n","      <td>1.0000</td>\n","      <td>59.250000</td>\n","      <td>1.175000e+02</td>\n","      <td>1.757500e+02</td>\n","      <td>2.340000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0934892-e8f1-4a5b-97a4-e5624374826f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f0934892-e8f1-4a5b-97a4-e5624374826f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f0934892-e8f1-4a5b-97a4-e5624374826f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a93938c-33a7-44ae-a94a-4e6eda2d9aa3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a93938c-33a7-44ae-a94a-4e6eda2d9aa3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a93938c-33a7-44ae-a94a-4e6eda2d9aa3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["world_pop.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"bgPYP8dWvjNu","executionInfo":{"status":"ok","timestamp":1704907986116,"user_tz":-180,"elapsed":836,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"ffd70d89-5465-47d7-af21-035b9b904a42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 count          mean           std       min            25%  \\\n","pop1980          234.0  1.898462e+07  8.178519e+07  733.0000  229614.250000   \n","pop2000          234.0  2.626947e+07  1.116982e+08  651.0000  327242.000000   \n","pop2010          234.0  2.984524e+07  1.242185e+08  596.0000  393149.000000   \n","pop2023          234.0  3.437442e+07  1.373864e+08  518.0000  422598.250000   \n","pop2024          234.0  3.468862e+07  1.380750e+08  526.0000  426456.500000   \n","pop2030          234.0  3.651461e+07  1.417827e+08  561.0000  456149.000000   \n","pop2050          234.0  4.148628e+07  1.481676e+08  731.0000  546605.750000   \n","area             234.0  5.814500e+05  1.761841e+06    0.4400    2650.000000   \n","landAreaKm       234.0  5.571123e+05  1.689972e+06    0.4400    2625.875000   \n","density          234.0  4.538142e+02  1.990152e+03    0.1384      39.801175   \n","growthRate       234.0  9.200427e-03  1.137134e-02   -0.0309       0.001925   \n","worldPercentage  234.0  4.332479e-03  1.724727e-02    0.0000       0.000100   \n","netChange        234.0  9.955556e-03  3.392928e-02   -0.0224       0.000000   \n","rank             234.0  1.175000e+02  6.769417e+01    1.0000      59.250000   \n","\n","                          50%           75%           max  \n","pop1980          3.141146e+06  9.826054e+06  9.823725e+08  \n","pop2000          4.292907e+06  1.576230e+07  1.264099e+09  \n","pop2010          4.942770e+06  1.915957e+07  1.348191e+09  \n","pop2023          5.643895e+06  2.324537e+07  1.428628e+09  \n","pop2024          5.626359e+06  2.392272e+07  1.441720e+09  \n","pop2030          6.178231e+06  2.616311e+07  1.514994e+09  \n","pop2050          6.352397e+06  3.568614e+07  1.670491e+09  \n","area             8.119950e+04  4.304258e+05  1.709824e+07  \n","landAreaKm       7.568925e+04  4.047876e+05  1.637687e+07  \n","density          9.828740e+01  2.482232e+02  2.167422e+04  \n","growthRate       7.950000e-03  1.567500e-02  4.830000e-02  \n","worldPercentage  7.000000e-04  3.000000e-03  1.801000e-01  \n","netChange        6.000000e-04  7.250000e-03  4.114000e-01  \n","rank             1.175000e+02  1.757500e+02  2.340000e+02  "],"text/html":["\n","  <div id=\"df-b4a0ef4c-7cfb-4ef2-ad4c-d13976e0d0b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pop1980</th>\n","      <td>234.0</td>\n","      <td>1.898462e+07</td>\n","      <td>8.178519e+07</td>\n","      <td>733.0000</td>\n","      <td>229614.250000</td>\n","      <td>3.141146e+06</td>\n","      <td>9.826054e+06</td>\n","      <td>9.823725e+08</td>\n","    </tr>\n","    <tr>\n","      <th>pop2000</th>\n","      <td>234.0</td>\n","      <td>2.626947e+07</td>\n","      <td>1.116982e+08</td>\n","      <td>651.0000</td>\n","      <td>327242.000000</td>\n","      <td>4.292907e+06</td>\n","      <td>1.576230e+07</td>\n","      <td>1.264099e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2010</th>\n","      <td>234.0</td>\n","      <td>2.984524e+07</td>\n","      <td>1.242185e+08</td>\n","      <td>596.0000</td>\n","      <td>393149.000000</td>\n","      <td>4.942770e+06</td>\n","      <td>1.915957e+07</td>\n","      <td>1.348191e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2023</th>\n","      <td>234.0</td>\n","      <td>3.437442e+07</td>\n","      <td>1.373864e+08</td>\n","      <td>518.0000</td>\n","      <td>422598.250000</td>\n","      <td>5.643895e+06</td>\n","      <td>2.324537e+07</td>\n","      <td>1.428628e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2024</th>\n","      <td>234.0</td>\n","      <td>3.468862e+07</td>\n","      <td>1.380750e+08</td>\n","      <td>526.0000</td>\n","      <td>426456.500000</td>\n","      <td>5.626359e+06</td>\n","      <td>2.392272e+07</td>\n","      <td>1.441720e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2030</th>\n","      <td>234.0</td>\n","      <td>3.651461e+07</td>\n","      <td>1.417827e+08</td>\n","      <td>561.0000</td>\n","      <td>456149.000000</td>\n","      <td>6.178231e+06</td>\n","      <td>2.616311e+07</td>\n","      <td>1.514994e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2050</th>\n","      <td>234.0</td>\n","      <td>4.148628e+07</td>\n","      <td>1.481676e+08</td>\n","      <td>731.0000</td>\n","      <td>546605.750000</td>\n","      <td>6.352397e+06</td>\n","      <td>3.568614e+07</td>\n","      <td>1.670491e+09</td>\n","    </tr>\n","    <tr>\n","      <th>area</th>\n","      <td>234.0</td>\n","      <td>5.814500e+05</td>\n","      <td>1.761841e+06</td>\n","      <td>0.4400</td>\n","      <td>2650.000000</td>\n","      <td>8.119950e+04</td>\n","      <td>4.304258e+05</td>\n","      <td>1.709824e+07</td>\n","    </tr>\n","    <tr>\n","      <th>landAreaKm</th>\n","      <td>234.0</td>\n","      <td>5.571123e+05</td>\n","      <td>1.689972e+06</td>\n","      <td>0.4400</td>\n","      <td>2625.875000</td>\n","      <td>7.568925e+04</td>\n","      <td>4.047876e+05</td>\n","      <td>1.637687e+07</td>\n","    </tr>\n","    <tr>\n","      <th>density</th>\n","      <td>234.0</td>\n","      <td>4.538142e+02</td>\n","      <td>1.990152e+03</td>\n","      <td>0.1384</td>\n","      <td>39.801175</td>\n","      <td>9.828740e+01</td>\n","      <td>2.482232e+02</td>\n","      <td>2.167422e+04</td>\n","    </tr>\n","    <tr>\n","      <th>growthRate</th>\n","      <td>234.0</td>\n","      <td>9.200427e-03</td>\n","      <td>1.137134e-02</td>\n","      <td>-0.0309</td>\n","      <td>0.001925</td>\n","      <td>7.950000e-03</td>\n","      <td>1.567500e-02</td>\n","      <td>4.830000e-02</td>\n","    </tr>\n","    <tr>\n","      <th>worldPercentage</th>\n","      <td>234.0</td>\n","      <td>4.332479e-03</td>\n","      <td>1.724727e-02</td>\n","      <td>0.0000</td>\n","      <td>0.000100</td>\n","      <td>7.000000e-04</td>\n","      <td>3.000000e-03</td>\n","      <td>1.801000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>netChange</th>\n","      <td>234.0</td>\n","      <td>9.955556e-03</td>\n","      <td>3.392928e-02</td>\n","      <td>-0.0224</td>\n","      <td>0.000000</td>\n","      <td>6.000000e-04</td>\n","      <td>7.250000e-03</td>\n","      <td>4.114000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>rank</th>\n","      <td>234.0</td>\n","      <td>1.175000e+02</td>\n","      <td>6.769417e+01</td>\n","      <td>1.0000</td>\n","      <td>59.250000</td>\n","      <td>1.175000e+02</td>\n","      <td>1.757500e+02</td>\n","      <td>2.340000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4a0ef4c-7cfb-4ef2-ad4c-d13976e0d0b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4a0ef4c-7cfb-4ef2-ad4c-d13976e0d0b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4a0ef4c-7cfb-4ef2-ad4c-d13976e0d0b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4d587d0-f15b-4448-a88d-0efbc803e955\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4d587d0-f15b-4448-a88d-0efbc803e955')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4d587d0-f15b-4448-a88d-0efbc803e955 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["world_pop.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"lhnOlFVDvsWA","executionInfo":{"status":"ok","timestamp":1704907986117,"user_tz":-180,"elapsed":22,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"dfe3f603-3f65-49b9-a83a-a96adb407fa8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 count          mean           std       min            25%  \\\n","pop1980          234.0  1.898462e+07  8.178519e+07  733.0000  229614.250000   \n","pop2000          234.0  2.626947e+07  1.116982e+08  651.0000  327242.000000   \n","pop2010          234.0  2.984524e+07  1.242185e+08  596.0000  393149.000000   \n","pop2023          234.0  3.437442e+07  1.373864e+08  518.0000  422598.250000   \n","pop2024          234.0  3.468862e+07  1.380750e+08  526.0000  426456.500000   \n","pop2030          234.0  3.651461e+07  1.417827e+08  561.0000  456149.000000   \n","pop2050          234.0  4.148628e+07  1.481676e+08  731.0000  546605.750000   \n","area             234.0  5.814500e+05  1.761841e+06    0.4400    2650.000000   \n","landAreaKm       234.0  5.571123e+05  1.689972e+06    0.4400    2625.875000   \n","density          234.0  4.538142e+02  1.990152e+03    0.1384      39.801175   \n","growthRate       234.0  9.200427e-03  1.137134e-02   -0.0309       0.001925   \n","worldPercentage  234.0  4.332479e-03  1.724727e-02    0.0000       0.000100   \n","netChange        234.0  9.955556e-03  3.392928e-02   -0.0224       0.000000   \n","rank             234.0  1.175000e+02  6.769417e+01    1.0000      59.250000   \n","\n","                          50%           75%           max  \n","pop1980          3.141146e+06  9.826054e+06  9.823725e+08  \n","pop2000          4.292907e+06  1.576230e+07  1.264099e+09  \n","pop2010          4.942770e+06  1.915957e+07  1.348191e+09  \n","pop2023          5.643895e+06  2.324537e+07  1.428628e+09  \n","pop2024          5.626359e+06  2.392272e+07  1.441720e+09  \n","pop2030          6.178231e+06  2.616311e+07  1.514994e+09  \n","pop2050          6.352397e+06  3.568614e+07  1.670491e+09  \n","area             8.119950e+04  4.304258e+05  1.709824e+07  \n","landAreaKm       7.568925e+04  4.047876e+05  1.637687e+07  \n","density          9.828740e+01  2.482232e+02  2.167422e+04  \n","growthRate       7.950000e-03  1.567500e-02  4.830000e-02  \n","worldPercentage  7.000000e-04  3.000000e-03  1.801000e-01  \n","netChange        6.000000e-04  7.250000e-03  4.114000e-01  \n","rank             1.175000e+02  1.757500e+02  2.340000e+02  "],"text/html":["\n","  <div id=\"df-d2c2e1a9-d847-417e-b65e-c0f04846ebf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pop1980</th>\n","      <td>234.0</td>\n","      <td>1.898462e+07</td>\n","      <td>8.178519e+07</td>\n","      <td>733.0000</td>\n","      <td>229614.250000</td>\n","      <td>3.141146e+06</td>\n","      <td>9.826054e+06</td>\n","      <td>9.823725e+08</td>\n","    </tr>\n","    <tr>\n","      <th>pop2000</th>\n","      <td>234.0</td>\n","      <td>2.626947e+07</td>\n","      <td>1.116982e+08</td>\n","      <td>651.0000</td>\n","      <td>327242.000000</td>\n","      <td>4.292907e+06</td>\n","      <td>1.576230e+07</td>\n","      <td>1.264099e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2010</th>\n","      <td>234.0</td>\n","      <td>2.984524e+07</td>\n","      <td>1.242185e+08</td>\n","      <td>596.0000</td>\n","      <td>393149.000000</td>\n","      <td>4.942770e+06</td>\n","      <td>1.915957e+07</td>\n","      <td>1.348191e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2023</th>\n","      <td>234.0</td>\n","      <td>3.437442e+07</td>\n","      <td>1.373864e+08</td>\n","      <td>518.0000</td>\n","      <td>422598.250000</td>\n","      <td>5.643895e+06</td>\n","      <td>2.324537e+07</td>\n","      <td>1.428628e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2024</th>\n","      <td>234.0</td>\n","      <td>3.468862e+07</td>\n","      <td>1.380750e+08</td>\n","      <td>526.0000</td>\n","      <td>426456.500000</td>\n","      <td>5.626359e+06</td>\n","      <td>2.392272e+07</td>\n","      <td>1.441720e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2030</th>\n","      <td>234.0</td>\n","      <td>3.651461e+07</td>\n","      <td>1.417827e+08</td>\n","      <td>561.0000</td>\n","      <td>456149.000000</td>\n","      <td>6.178231e+06</td>\n","      <td>2.616311e+07</td>\n","      <td>1.514994e+09</td>\n","    </tr>\n","    <tr>\n","      <th>pop2050</th>\n","      <td>234.0</td>\n","      <td>4.148628e+07</td>\n","      <td>1.481676e+08</td>\n","      <td>731.0000</td>\n","      <td>546605.750000</td>\n","      <td>6.352397e+06</td>\n","      <td>3.568614e+07</td>\n","      <td>1.670491e+09</td>\n","    </tr>\n","    <tr>\n","      <th>area</th>\n","      <td>234.0</td>\n","      <td>5.814500e+05</td>\n","      <td>1.761841e+06</td>\n","      <td>0.4400</td>\n","      <td>2650.000000</td>\n","      <td>8.119950e+04</td>\n","      <td>4.304258e+05</td>\n","      <td>1.709824e+07</td>\n","    </tr>\n","    <tr>\n","      <th>landAreaKm</th>\n","      <td>234.0</td>\n","      <td>5.571123e+05</td>\n","      <td>1.689972e+06</td>\n","      <td>0.4400</td>\n","      <td>2625.875000</td>\n","      <td>7.568925e+04</td>\n","      <td>4.047876e+05</td>\n","      <td>1.637687e+07</td>\n","    </tr>\n","    <tr>\n","      <th>density</th>\n","      <td>234.0</td>\n","      <td>4.538142e+02</td>\n","      <td>1.990152e+03</td>\n","      <td>0.1384</td>\n","      <td>39.801175</td>\n","      <td>9.828740e+01</td>\n","      <td>2.482232e+02</td>\n","      <td>2.167422e+04</td>\n","    </tr>\n","    <tr>\n","      <th>growthRate</th>\n","      <td>234.0</td>\n","      <td>9.200427e-03</td>\n","      <td>1.137134e-02</td>\n","      <td>-0.0309</td>\n","      <td>0.001925</td>\n","      <td>7.950000e-03</td>\n","      <td>1.567500e-02</td>\n","      <td>4.830000e-02</td>\n","    </tr>\n","    <tr>\n","      <th>worldPercentage</th>\n","      <td>234.0</td>\n","      <td>4.332479e-03</td>\n","      <td>1.724727e-02</td>\n","      <td>0.0000</td>\n","      <td>0.000100</td>\n","      <td>7.000000e-04</td>\n","      <td>3.000000e-03</td>\n","      <td>1.801000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>netChange</th>\n","      <td>234.0</td>\n","      <td>9.955556e-03</td>\n","      <td>3.392928e-02</td>\n","      <td>-0.0224</td>\n","      <td>0.000000</td>\n","      <td>6.000000e-04</td>\n","      <td>7.250000e-03</td>\n","      <td>4.114000e-01</td>\n","    </tr>\n","    <tr>\n","      <th>rank</th>\n","      <td>234.0</td>\n","      <td>1.175000e+02</td>\n","      <td>6.769417e+01</td>\n","      <td>1.0000</td>\n","      <td>59.250000</td>\n","      <td>1.175000e+02</td>\n","      <td>1.757500e+02</td>\n","      <td>2.340000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2c2e1a9-d847-417e-b65e-c0f04846ebf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d2c2e1a9-d847-417e-b65e-c0f04846ebf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d2c2e1a9-d847-417e-b65e-c0f04846ebf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6a52c99c-9708-4e15-95ba-80379083e492\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a52c99c-9708-4e15-95ba-80379083e492')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6a52c99c-9708-4e15-95ba-80379083e492 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["## **1. Total population of the world**"],"metadata":{"id":"k-L_pW5U4mQ9"}},{"cell_type":"code","source":["total_pop = world_pop[\"pop2024\"].sum()\n","print(f\"Total World Population:\", total_pop)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kxFYAaysq5O2","executionInfo":{"status":"ok","timestamp":1704907986117,"user_tz":-180,"elapsed":19,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"6ea3dcb8-facf-4161-c88e-8dc8e527d1f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total World Population: 8117135983.0\n"]}]},{"cell_type":"markdown","source":["## **8. Percentage of the world's population that lives in each country**"],"metadata":{"id":"weZyLzGtDhpe"}},{"cell_type":"code","source":["# create a new column named pop_percentage\n","world_pop[\"pop_percentage\"] = (world_pop[\"pop2024\"] / total_pop) * 100\n","world_pop[\"pop_percentage\"] = round(world_pop[\"pop_percentage\"], 2)\n","world_pop[[\"country\", \"pop2024\", \"pop_percentage\"]].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UiPvNMIDDvbB","executionInfo":{"status":"ok","timestamp":1704907986117,"user_tz":-180,"elapsed":15,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"0779f971-f5c4-4681-a62c-cd144165e15b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         country       pop2024  pop_percentage\n","0          India  1.441720e+09           17.76\n","1          China  1.425179e+09           17.56\n","2  United States  3.418144e+08            4.21\n","3      Indonesia  2.797980e+08            3.45\n","4       Pakistan  2.452098e+08            3.02"],"text/html":["\n","  <div id=\"df-dd4556a7-c3b6-4a74-8900-7e166fd2d908\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop2024</th>\n","      <th>pop_percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>India</td>\n","      <td>1.441720e+09</td>\n","      <td>17.76</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>China</td>\n","      <td>1.425179e+09</td>\n","      <td>17.56</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>United States</td>\n","      <td>3.418144e+08</td>\n","      <td>4.21</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indonesia</td>\n","      <td>2.797980e+08</td>\n","      <td>3.45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pakistan</td>\n","      <td>2.452098e+08</td>\n","      <td>3.02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd4556a7-c3b6-4a74-8900-7e166fd2d908')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd4556a7-c3b6-4a74-8900-7e166fd2d908 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd4556a7-c3b6-4a74-8900-7e166fd2d908');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4aba2761-b063-40d6-adcc-524eb061a6da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4aba2761-b063-40d6-adcc-524eb061a6da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4aba2761-b063-40d6-adcc-524eb061a6da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## **2. Top 10 most populous countries**"],"metadata":{"id":"-uFrfioDuHbe"}},{"cell_type":"code","source":["# top 10 countries by population\n","\n","top_10 = world_pop.sort_values('pop2024', ascending=False).head(10)\n","\n","fig, ax = plt.subplots(figsize=(15, 6))\n","\n","ax.bar(top_10['country'], top_10['pop2024'], edgecolor=\"skyblue\")\n","plt.ylim(0, 1.5e9)\n","ax.set_title(\"Population in 2024 (Top 10)\")\n","ax.set_xlabel(\"Countries\")\n","ax.set_ylabel(\"Population \\n(Billions)\", labelpad=30)\n","ax.yaxis.label.set_rotation(0);\n","\n","\n","fig, ax2 = plt.subplots(figsize=(15, 6))\n","ax2.barh(top_10['country'], top_10['pop2024'], color='skyblue', edgecolor=\"blue\")\n","ax2.set_title(\"Population in 2024 (Top 10)\")\n","ax2.set_ylabel(\"Countries\")\n","ax2.set_xlabel(\"Population (Billions)\")\n","ax2.yaxis.label.set_rotation(0)\n","ax2.invert_yaxis() # labels read top-to-bottom\n",";"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"iSXXNTNs1UJS","executionInfo":{"status":"ok","timestamp":1704907987419,"user_tz":-180,"elapsed":1314,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"6bf6acce-96b9-436b-8be0-37f40084a600"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["''"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **3. Top 10 countries with the highest population density**"],"metadata":{"id":"rZA6WYVyr2TQ"}},{"cell_type":"code","source":["top_10_density = world_pop.sort_values('density', ascending=False).head(10)\n","\n","fig, ax = plt.subplots(figsize=(15, 6))\n","\n","ax.bar(top_10_density['country'], top_10_density['density'], color=\"skyblue\")\n","ax.set_title(\"Population Density in 2024 (Top 10)\")\n","ax.set_xlabel(\"Countries\")\n","ax.set_ylabel(\"Density\", labelpad=30)\n","ax.yaxis.label.set_rotation(0);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"AksW_nNNr6Ko","executionInfo":{"status":"ok","timestamp":1704907988922,"user_tz":-180,"elapsed":1505,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"39029723-7e49-4f73-c2f7-58726bcdfe03"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["top_10_density"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":400},"id":"FUnmI52zmFBF","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":35,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"c0b0e2b8-b16c-4945-e321-5932e78b7708"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          country     pop1980      pop2000      pop2010      pop2023  \\\n","166         Macau    245332.0     431896.0     557297.0     704149.0   \n","216        Monaco     27076.0      32465.0      33178.0      36297.0   \n","113     Singapore   2400729.0    4053602.0    5163590.0    6014723.0   \n","103     Hong Kong   4978544.0    6731195.0    7132438.0    7491609.0   \n","218     Gibraltar     28734.0      27741.0      31262.0      32688.0   \n","153       Bahrain    362595.0     711442.0    1213645.0    1485509.0   \n","173      Maldives    164887.0     282507.0     361575.0     521021.0   \n","172         Malta    333587.0     399212.0     418755.0     535064.0   \n","7      Bangladesh  83929765.0  129193327.0  148391139.0  172954319.0   \n","212  Sint Maarten     12243.0      30489.0      33034.0      44222.0   \n","\n","         pop2024      pop2030      pop2050       area  landAreaKm     density  \\\n","166     713082.0     763371.0     881666.0      32.90        32.9  21674.2249   \n","216      36157.0      35862.0      37664.0       2.02         2.0  18078.5000   \n","113    6052709.0    6251988.0    6337235.0     710.00       718.0   8429.9568   \n","103    7496681.0    7485887.0    6975391.0    1104.00      1050.0   7139.6962   \n","218      32718.0      32771.0      31356.0       6.80         6.8   4811.4706   \n","153    1498712.0    1574679.0    1809237.0     765.00       785.0   1909.1873   \n","173     517887.0     512683.0     569909.0     300.00       300.0   1726.2900   \n","172     536740.0     543425.0     522737.0     316.00       320.0   1677.3125   \n","7    174701211.0  184424144.0  203904900.0  147570.00    130170.0   1342.1004   \n","212      44309.0      44946.0      38947.0      34.00        34.0   1303.2059   \n","\n","     growthRate  worldPercentage  netChange  rank  pop_percentage  \n","166      0.0127           0.0001     0.0003   167            0.01  \n","216     -0.0039           0.0000     0.0000   217            0.00  \n","113      0.0063           0.0008     0.0012   114            0.07  \n","103      0.0007           0.0009     0.0001   104            0.09  \n","218      0.0009           0.0000     0.0000   219            0.00  \n","153      0.0089           0.0002     0.0004   154            0.02  \n","173     -0.0060           0.0001    -0.0001   174            0.01  \n","172      0.0031           0.0001     0.0001   173            0.01  \n","7        0.0101           0.0218     0.0550     8            2.15  \n","212      0.0020           0.0000     0.0000   213            0.00  "],"text/html":["\n","  <div id=\"df-481a8214-3ee8-4eab-8ec2-86b6546eddf5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>density</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>netChange</th>\n","      <th>rank</th>\n","      <th>pop_percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>166</th>\n","      <td>Macau</td>\n","      <td>245332.0</td>\n","      <td>431896.0</td>\n","      <td>557297.0</td>\n","      <td>704149.0</td>\n","      <td>713082.0</td>\n","      <td>763371.0</td>\n","      <td>881666.0</td>\n","      <td>32.90</td>\n","      <td>32.9</td>\n","      <td>21674.2249</td>\n","      <td>0.0127</td>\n","      <td>0.0001</td>\n","      <td>0.0003</td>\n","      <td>167</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>216</th>\n","      <td>Monaco</td>\n","      <td>27076.0</td>\n","      <td>32465.0</td>\n","      <td>33178.0</td>\n","      <td>36297.0</td>\n","      <td>36157.0</td>\n","      <td>35862.0</td>\n","      <td>37664.0</td>\n","      <td>2.02</td>\n","      <td>2.0</td>\n","      <td>18078.5000</td>\n","      <td>-0.0039</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>217</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>113</th>\n","      <td>Singapore</td>\n","      <td>2400729.0</td>\n","      <td>4053602.0</td>\n","      <td>5163590.0</td>\n","      <td>6014723.0</td>\n","      <td>6052709.0</td>\n","      <td>6251988.0</td>\n","      <td>6337235.0</td>\n","      <td>710.00</td>\n","      <td>718.0</td>\n","      <td>8429.9568</td>\n","      <td>0.0063</td>\n","      <td>0.0008</td>\n","      <td>0.0012</td>\n","      <td>114</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>Hong Kong</td>\n","      <td>4978544.0</td>\n","      <td>6731195.0</td>\n","      <td>7132438.0</td>\n","      <td>7491609.0</td>\n","      <td>7496681.0</td>\n","      <td>7485887.0</td>\n","      <td>6975391.0</td>\n","      <td>1104.00</td>\n","      <td>1050.0</td>\n","      <td>7139.6962</td>\n","      <td>0.0007</td>\n","      <td>0.0009</td>\n","      <td>0.0001</td>\n","      <td>104</td>\n","      <td>0.09</td>\n","    </tr>\n","    <tr>\n","      <th>218</th>\n","      <td>Gibraltar</td>\n","      <td>28734.0</td>\n","      <td>27741.0</td>\n","      <td>31262.0</td>\n","      <td>32688.0</td>\n","      <td>32718.0</td>\n","      <td>32771.0</td>\n","      <td>31356.0</td>\n","      <td>6.80</td>\n","      <td>6.8</td>\n","      <td>4811.4706</td>\n","      <td>0.0009</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>219</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>Bahrain</td>\n","      <td>362595.0</td>\n","      <td>711442.0</td>\n","      <td>1213645.0</td>\n","      <td>1485509.0</td>\n","      <td>1498712.0</td>\n","      <td>1574679.0</td>\n","      <td>1809237.0</td>\n","      <td>765.00</td>\n","      <td>785.0</td>\n","      <td>1909.1873</td>\n","      <td>0.0089</td>\n","      <td>0.0002</td>\n","      <td>0.0004</td>\n","      <td>154</td>\n","      <td>0.02</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>Maldives</td>\n","      <td>164887.0</td>\n","      <td>282507.0</td>\n","      <td>361575.0</td>\n","      <td>521021.0</td>\n","      <td>517887.0</td>\n","      <td>512683.0</td>\n","      <td>569909.0</td>\n","      <td>300.00</td>\n","      <td>300.0</td>\n","      <td>1726.2900</td>\n","      <td>-0.0060</td>\n","      <td>0.0001</td>\n","      <td>-0.0001</td>\n","      <td>174</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>Malta</td>\n","      <td>333587.0</td>\n","      <td>399212.0</td>\n","      <td>418755.0</td>\n","      <td>535064.0</td>\n","      <td>536740.0</td>\n","      <td>543425.0</td>\n","      <td>522737.0</td>\n","      <td>316.00</td>\n","      <td>320.0</td>\n","      <td>1677.3125</td>\n","      <td>0.0031</td>\n","      <td>0.0001</td>\n","      <td>0.0001</td>\n","      <td>173</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Bangladesh</td>\n","      <td>83929765.0</td>\n","      <td>129193327.0</td>\n","      <td>148391139.0</td>\n","      <td>172954319.0</td>\n","      <td>174701211.0</td>\n","      <td>184424144.0</td>\n","      <td>203904900.0</td>\n","      <td>147570.00</td>\n","      <td>130170.0</td>\n","      <td>1342.1004</td>\n","      <td>0.0101</td>\n","      <td>0.0218</td>\n","      <td>0.0550</td>\n","      <td>8</td>\n","      <td>2.15</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>Sint Maarten</td>\n","      <td>12243.0</td>\n","      <td>30489.0</td>\n","      <td>33034.0</td>\n","      <td>44222.0</td>\n","      <td>44309.0</td>\n","      <td>44946.0</td>\n","      <td>38947.0</td>\n","      <td>34.00</td>\n","      <td>34.0</td>\n","      <td>1303.2059</td>\n","      <td>0.0020</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>213</td>\n","      <td>0.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-481a8214-3ee8-4eab-8ec2-86b6546eddf5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-481a8214-3ee8-4eab-8ec2-86b6546eddf5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-481a8214-3ee8-4eab-8ec2-86b6546eddf5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-332432cf-3139-4d7c-b786-bfd0d692b8bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-332432cf-3139-4d7c-b786-bfd0d692b8bc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-332432cf-3139-4d7c-b786-bfd0d692b8bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d017471a-5d98-4fd1-bec8-2ab08e8c9d26\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_10_density')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d017471a-5d98-4fd1-bec8-2ab08e8c9d26 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_10_density');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["## **4. Average population growth rate**"],"metadata":{"id":"yrjsJrlKsijN"}},{"cell_type":"code","source":["avg_growth_rate = world_pop[\"growthRate\"].mean()\n","print(f\"Average population growth rate:\", \"{:.2%}\".format(avg_growth_rate))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3GWZcT6LssMF","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":34,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"0073b15e-1f0c-4752-a10d-59e40a4c2ea1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average population growth rate: 0.92%\n"]}]},{"cell_type":"markdown","source":["## **Population growth rates of different countries**"],"metadata":{"id":"ySF7LM64LoHC"}},{"cell_type":"code","source":["highest_growth_rates = world_pop[[\"country\", \"growthRate\"]].head(10)\n","\n","plt.figure(figsize=(10, 5))\n","plt.plot(highest_growth_rates[\"country\"], highest_growth_rates[\"growthRate\"])\n","plt.xticks(rotation=45)\n","plt.xlabel(\"Countries\")\n","plt.ylabel(\"Growth Rate (%)\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"-iBHo1ssLq73","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":32,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"9b7a11e7-3f92-4bec-bd4b-b2c31f528d4d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **5. Countries with population growth exceeding the average**"],"metadata":{"id":"O0QKLXxwumfL"}},{"cell_type":"code","source":["average_pop = world_pop['pop2024'].mean()\n","print(f\"Average Population:\", \"{:.2f}\".format(average_pop))\n","average_less = []\n","average_more = []\n","\n","for idx, row in world_pop.iterrows():\n","  country = row[\"country\"]\n","  current_pop = row[\"pop2024\"]\n","\n","  if current_pop > average_pop:\n","    average_more.append({'country': country, 'pop2024': current_pop})\n","  else:\n","    average_less.append({'country': country, 'pop2024': current_pop})\n","\n","df_average_less = pd.DataFrame(average_less)\n","df_average_more = pd.DataFrame(average_more)\n","\n","print(\"--------------------------------------------\")\n","print(\"Countries exceeding population average - \", len(df_average_more))\n","print(df_average_more.head(10))\n","print()\n","print(\"Countries with less than population average - \", len(df_average_less))\n","print(df_average_less.head(10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i-wTxVnmuq1Z","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":31,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"b431ddb6-dd10-404f-ecb3-1fbd00caf48b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Population: 34688615.31\n","--------------------------------------------\n","Countries exceeding population average -  46\n","         country       pop2024\n","0          India  1.441720e+09\n","1          China  1.425179e+09\n","2  United States  3.418144e+08\n","3      Indonesia  2.797980e+08\n","4       Pakistan  2.452098e+08\n","5        Nigeria  2.291522e+08\n","6         Brazil  2.176373e+08\n","7     Bangladesh  1.747012e+08\n","8         Russia  1.439571e+08\n","9       Ethiopia  1.297197e+08\n","\n","Countries with less than population average -  188\n","       country     pop2024\n","0         Peru  34683444.0\n","1     Malaysia  34671895.0\n","2        Nepal  31240315.0\n","3   Madagascar  31056610.0\n","4  Ivory Coast  29603302.0\n","5    Venezuela  29395334.0\n","6     Cameroon  29394433.0\n","7        Niger  28238972.0\n","8    Australia  26699482.0\n","9  North Korea  26244582.0\n"]}]},{"cell_type":"code","source":["world_pop.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dbz_0DW2cTsM","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":29,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"91252a77-3617-4236-ef0b-4163007daefd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 234 entries, 0 to 233\n","Data columns (total 16 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   country          234 non-null    object \n"," 1   pop1980          234 non-null    float64\n"," 2   pop2000          234 non-null    float64\n"," 3   pop2010          234 non-null    float64\n"," 4   pop2023          234 non-null    float64\n"," 5   pop2024          234 non-null    float64\n"," 6   pop2030          234 non-null    float64\n"," 7   pop2050          234 non-null    float64\n"," 8   area             234 non-null    float64\n"," 9   landAreaKm       234 non-null    float64\n"," 10  density          234 non-null    float64\n"," 11  growthRate       234 non-null    float64\n"," 12  worldPercentage  234 non-null    float64\n"," 13  netChange        234 non-null    float64\n"," 14  rank             234 non-null    int64  \n"," 15  pop_percentage   234 non-null    float64\n","dtypes: float64(14), int64(1), object(1)\n","memory usage: 29.4+ KB\n"]}]},{"cell_type":"code","source":["average_less_data = []\n","average_more_data = []\n","\n","for row in world_pop.itertuples(index=False, name=\"Country\"):\n","    country_name = row.country  # Accessing the 'country name' column\n","    current_population = row.pop2024  # Accessing the 'current population' column\n","\n","    if current_population <= average_pop:\n","        average_less_data.append({'country': country_name, 'pop2024': current_population})\n","    else:\n","        average_more_data.append({'country': country_name, 'pop2024': current_population})\n","\n","df_average_more = pd.DataFrame(average_more_data)\n","df_average_less = pd.DataFrame(average_less_data)\n","\n","print(f\"Average Population:\", \"{:.2f}\".format(average_pop))\n","print(\"-\" * 50)\n","print(\"Countries exceeding population average - \", len(df_average_more))\n","df_average_more.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"0yE30nqg0Y4E","executionInfo":{"status":"ok","timestamp":1704907988923,"user_tz":-180,"elapsed":27,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"a09ad8d4-5239-473e-b9ed-4c07b5568979"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Population: 34688615.31\n","--------------------------------------------------\n","Countries exceeding population average -  46\n"]},{"output_type":"execute_result","data":{"text/plain":["         country       pop2024\n","0          India  1.441720e+09\n","1          China  1.425179e+09\n","2  United States  3.418144e+08\n","3      Indonesia  2.797980e+08\n","4       Pakistan  2.452098e+08\n","5        Nigeria  2.291522e+08\n","6         Brazil  2.176373e+08\n","7     Bangladesh  1.747012e+08\n","8         Russia  1.439571e+08\n","9       Ethiopia  1.297197e+08"],"text/html":["\n","  <div id=\"df-2fa6bbd0-36af-4e45-b37b-4a59aff100c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop2024</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>India</td>\n","      <td>1.441720e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>China</td>\n","      <td>1.425179e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>United States</td>\n","      <td>3.418144e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indonesia</td>\n","      <td>2.797980e+08</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pakistan</td>\n","      <td>2.452098e+08</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Nigeria</td>\n","      <td>2.291522e+08</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Brazil</td>\n","      <td>2.176373e+08</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Bangladesh</td>\n","      <td>1.747012e+08</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Russia</td>\n","      <td>1.439571e+08</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Ethiopia</td>\n","      <td>1.297197e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fa6bbd0-36af-4e45-b37b-4a59aff100c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2fa6bbd0-36af-4e45-b37b-4a59aff100c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2fa6bbd0-36af-4e45-b37b-4a59aff100c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-714604e1-0d23-4696-b385-c19880fd05b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-714604e1-0d23-4696-b385-c19880fd05b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-714604e1-0d23-4696-b385-c19880fd05b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["print(f\"Average Population:\", \"{:.2f}\".format(average_pop))\n","print(\"-\" * 50)\n","print(\"Countries with less than population average - \", len(df_average_less))\n","df_average_less.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"bBCB7c4Y4pzd","executionInfo":{"status":"ok","timestamp":1704907988924,"user_tz":-180,"elapsed":25,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"963ec9dd-383a-4925-8ad4-870af2b12b22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Population: 34688615.31\n","--------------------------------------------------\n","Countries with less than population average -  188\n"]},{"output_type":"execute_result","data":{"text/plain":["       country     pop2024\n","0         Peru  34683444.0\n","1     Malaysia  34671895.0\n","2        Nepal  31240315.0\n","3   Madagascar  31056610.0\n","4  Ivory Coast  29603302.0\n","5    Venezuela  29395334.0\n","6     Cameroon  29394433.0\n","7        Niger  28238972.0\n","8    Australia  26699482.0\n","9  North Korea  26244582.0"],"text/html":["\n","  <div id=\"df-47c914ba-42a0-4f17-8316-7cf16bab7971\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>pop2024</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Peru</td>\n","      <td>34683444.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Malaysia</td>\n","      <td>34671895.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Nepal</td>\n","      <td>31240315.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Madagascar</td>\n","      <td>31056610.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Ivory Coast</td>\n","      <td>29603302.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Venezuela</td>\n","      <td>29395334.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Cameroon</td>\n","      <td>29394433.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Niger</td>\n","      <td>28238972.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Australia</td>\n","      <td>26699482.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>North Korea</td>\n","      <td>26244582.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47c914ba-42a0-4f17-8316-7cf16bab7971')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47c914ba-42a0-4f17-8316-7cf16bab7971 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47c914ba-42a0-4f17-8316-7cf16bab7971');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6bf0cabe-77d0-4665-8416-7359be75bc48\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bf0cabe-77d0-4665-8416-7359be75bc48')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6bf0cabe-77d0-4665-8416-7359be75bc48 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["## **Correlations**"],"metadata":{"id":"4eC181wsNwtn"}},{"cell_type":"code","source":["world_pop.corr(numeric_only=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"W3PxTnsY8aKT","executionInfo":{"status":"ok","timestamp":1704907988924,"user_tz":-180,"elapsed":23,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"a9813a34-0232-4db2-8df6-3fb6e282729e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  pop1980   pop2000   pop2010   pop2023   pop2024   pop2030  \\\n","pop1980          1.000000  0.995160  0.988786  0.979229  0.978071  0.970366   \n","pop2000          0.995160  1.000000  0.998593  0.994023  0.993372  0.988683   \n","pop2010          0.988786  0.998593  1.000000  0.998326  0.997975  0.995085   \n","pop2023          0.979229  0.994023  0.998326  1.000000  0.999982  0.999121   \n","pop2024          0.978071  0.993372  0.997975  0.999982  1.000000  0.999353   \n","pop2030          0.970366  0.988683  0.995085  0.999121  0.999353  1.000000   \n","pop2050          0.937017  0.964423  0.976432  0.987094  0.988019  0.992893   \n","area             0.498165  0.473933  0.461936  0.452640  0.451687  0.446092   \n","landAreaKm       0.500130  0.475309  0.463016  0.453509  0.452531  0.446786   \n","density         -0.025735 -0.025045 -0.025313 -0.026474 -0.026598 -0.027379   \n","growthRate      -0.057881 -0.034683 -0.020566 -0.001058  0.001155  0.013692   \n","worldPercentage  0.978058  0.993365  0.997970  0.999981  0.999999  0.999353   \n","netChange        0.469815  0.544772  0.586351  0.630626  0.635266  0.662503   \n","rank            -0.334628 -0.340709 -0.347268 -0.359633 -0.360910 -0.368631   \n","pop_percentage   0.978091  0.993383  0.997979  0.999981  0.999999  0.999349   \n","\n","                  pop2050      area  landAreaKm   density  growthRate  \\\n","pop1980          0.937017  0.498165    0.500130 -0.025735   -0.057881   \n","pop2000          0.964423  0.473933    0.475309 -0.025045   -0.034683   \n","pop2010          0.976432  0.461936    0.463016 -0.025313   -0.020566   \n","pop2023          0.987094  0.452640    0.453509 -0.026474   -0.001058   \n","pop2024          0.988019  0.451687    0.452531 -0.026598    0.001155   \n","pop2030          0.992893  0.446092    0.446786 -0.027379    0.013692   \n","pop2050          1.000000  0.428588    0.428903 -0.030588    0.057342   \n","area             0.428588  1.000000    0.997406 -0.065171    0.011110   \n","landAreaKm       0.428903  0.997406    1.000000 -0.065136    0.015620   \n","density         -0.030588 -0.065171   -0.065136  1.000000   -0.071184   \n","growthRate       0.057342  0.011110    0.015620 -0.071184    1.000000   \n","worldPercentage  0.988024  0.451767    0.452611 -0.026561    0.001102   \n","netChange        0.744831  0.164410    0.161659 -0.033092    0.283731   \n","rank            -0.395338 -0.384235   -0.393298  0.130487   -0.276460   \n","pop_percentage   0.988005  0.451597    0.452444 -0.026613    0.001158   \n","\n","                 worldPercentage  netChange      rank  pop_percentage  \n","pop1980                 0.978058   0.469815 -0.334628        0.978091  \n","pop2000                 0.993365   0.544772 -0.340709        0.993383  \n","pop2010                 0.997970   0.586351 -0.347268        0.997979  \n","pop2023                 0.999981   0.630626 -0.359633        0.999981  \n","pop2024                 0.999999   0.635266 -0.360910        0.999999  \n","pop2030                 0.999353   0.662503 -0.368631        0.999349  \n","pop2050                 0.988024   0.744831 -0.395338        0.988005  \n","area                    0.451767   0.164410 -0.384235        0.451597  \n","landAreaKm              0.452611   0.161659 -0.393298        0.452444  \n","density                -0.026561  -0.033092  0.130487       -0.026613  \n","growthRate              0.001102   0.283731 -0.276460        0.001158  \n","worldPercentage         1.000000   0.635291 -0.361066        0.999998  \n","netChange               0.635291   1.000000 -0.394779        0.635203  \n","rank                   -0.361066  -0.394779  1.000000       -0.361014  \n","pop_percentage          0.999998   0.635203 -0.361014        1.000000  "],"text/html":["\n","  <div id=\"df-1f3e2a2d-dcc6-40f1-b910-f060d0bdd90b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pop1980</th>\n","      <th>pop2000</th>\n","      <th>pop2010</th>\n","      <th>pop2023</th>\n","      <th>pop2024</th>\n","      <th>pop2030</th>\n","      <th>pop2050</th>\n","      <th>area</th>\n","      <th>landAreaKm</th>\n","      <th>density</th>\n","      <th>growthRate</th>\n","      <th>worldPercentage</th>\n","      <th>netChange</th>\n","      <th>rank</th>\n","      <th>pop_percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pop1980</th>\n","      <td>1.000000</td>\n","      <td>0.995160</td>\n","      <td>0.988786</td>\n","      <td>0.979229</td>\n","      <td>0.978071</td>\n","      <td>0.970366</td>\n","      <td>0.937017</td>\n","      <td>0.498165</td>\n","      <td>0.500130</td>\n","      <td>-0.025735</td>\n","      <td>-0.057881</td>\n","      <td>0.978058</td>\n","      <td>0.469815</td>\n","      <td>-0.334628</td>\n","      <td>0.978091</td>\n","    </tr>\n","    <tr>\n","      <th>pop2000</th>\n","      <td>0.995160</td>\n","      <td>1.000000</td>\n","      <td>0.998593</td>\n","      <td>0.994023</td>\n","      <td>0.993372</td>\n","      <td>0.988683</td>\n","      <td>0.964423</td>\n","      <td>0.473933</td>\n","      <td>0.475309</td>\n","      <td>-0.025045</td>\n","      <td>-0.034683</td>\n","      <td>0.993365</td>\n","      <td>0.544772</td>\n","      <td>-0.340709</td>\n","      <td>0.993383</td>\n","    </tr>\n","    <tr>\n","      <th>pop2010</th>\n","      <td>0.988786</td>\n","      <td>0.998593</td>\n","      <td>1.000000</td>\n","      <td>0.998326</td>\n","      <td>0.997975</td>\n","      <td>0.995085</td>\n","      <td>0.976432</td>\n","      <td>0.461936</td>\n","      <td>0.463016</td>\n","      <td>-0.025313</td>\n","      <td>-0.020566</td>\n","      <td>0.997970</td>\n","      <td>0.586351</td>\n","      <td>-0.347268</td>\n","      <td>0.997979</td>\n","    </tr>\n","    <tr>\n","      <th>pop2023</th>\n","      <td>0.979229</td>\n","      <td>0.994023</td>\n","      <td>0.998326</td>\n","      <td>1.000000</td>\n","      <td>0.999982</td>\n","      <td>0.999121</td>\n","      <td>0.987094</td>\n","      <td>0.452640</td>\n","      <td>0.453509</td>\n","      <td>-0.026474</td>\n","      <td>-0.001058</td>\n","      <td>0.999981</td>\n","      <td>0.630626</td>\n","      <td>-0.359633</td>\n","      <td>0.999981</td>\n","    </tr>\n","    <tr>\n","      <th>pop2024</th>\n","      <td>0.978071</td>\n","      <td>0.993372</td>\n","      <td>0.997975</td>\n","      <td>0.999982</td>\n","      <td>1.000000</td>\n","      <td>0.999353</td>\n","      <td>0.988019</td>\n","      <td>0.451687</td>\n","      <td>0.452531</td>\n","      <td>-0.026598</td>\n","      <td>0.001155</td>\n","      <td>0.999999</td>\n","      <td>0.635266</td>\n","      <td>-0.360910</td>\n","      <td>0.999999</td>\n","    </tr>\n","    <tr>\n","      <th>pop2030</th>\n","      <td>0.970366</td>\n","      <td>0.988683</td>\n","      <td>0.995085</td>\n","      <td>0.999121</td>\n","      <td>0.999353</td>\n","      <td>1.000000</td>\n","      <td>0.992893</td>\n","      <td>0.446092</td>\n","      <td>0.446786</td>\n","      <td>-0.027379</td>\n","      <td>0.013692</td>\n","      <td>0.999353</td>\n","      <td>0.662503</td>\n","      <td>-0.368631</td>\n","      <td>0.999349</td>\n","    </tr>\n","    <tr>\n","      <th>pop2050</th>\n","      <td>0.937017</td>\n","      <td>0.964423</td>\n","      <td>0.976432</td>\n","      <td>0.987094</td>\n","      <td>0.988019</td>\n","      <td>0.992893</td>\n","      <td>1.000000</td>\n","      <td>0.428588</td>\n","      <td>0.428903</td>\n","      <td>-0.030588</td>\n","      <td>0.057342</td>\n","      <td>0.988024</td>\n","      <td>0.744831</td>\n","      <td>-0.395338</td>\n","      <td>0.988005</td>\n","    </tr>\n","    <tr>\n","      <th>area</th>\n","      <td>0.498165</td>\n","      <td>0.473933</td>\n","      <td>0.461936</td>\n","      <td>0.452640</td>\n","      <td>0.451687</td>\n","      <td>0.446092</td>\n","      <td>0.428588</td>\n","      <td>1.000000</td>\n","      <td>0.997406</td>\n","      <td>-0.065171</td>\n","      <td>0.011110</td>\n","      <td>0.451767</td>\n","      <td>0.164410</td>\n","      <td>-0.384235</td>\n","      <td>0.451597</td>\n","    </tr>\n","    <tr>\n","      <th>landAreaKm</th>\n","      <td>0.500130</td>\n","      <td>0.475309</td>\n","      <td>0.463016</td>\n","      <td>0.453509</td>\n","      <td>0.452531</td>\n","      <td>0.446786</td>\n","      <td>0.428903</td>\n","      <td>0.997406</td>\n","      <td>1.000000</td>\n","      <td>-0.065136</td>\n","      <td>0.015620</td>\n","      <td>0.452611</td>\n","      <td>0.161659</td>\n","      <td>-0.393298</td>\n","      <td>0.452444</td>\n","    </tr>\n","    <tr>\n","      <th>density</th>\n","      <td>-0.025735</td>\n","      <td>-0.025045</td>\n","      <td>-0.025313</td>\n","      <td>-0.026474</td>\n","      <td>-0.026598</td>\n","      <td>-0.027379</td>\n","      <td>-0.030588</td>\n","      <td>-0.065171</td>\n","      <td>-0.065136</td>\n","      <td>1.000000</td>\n","      <td>-0.071184</td>\n","      <td>-0.026561</td>\n","      <td>-0.033092</td>\n","      <td>0.130487</td>\n","      <td>-0.026613</td>\n","    </tr>\n","    <tr>\n","      <th>growthRate</th>\n","      <td>-0.057881</td>\n","      <td>-0.034683</td>\n","      <td>-0.020566</td>\n","      <td>-0.001058</td>\n","      <td>0.001155</td>\n","      <td>0.013692</td>\n","      <td>0.057342</td>\n","      <td>0.011110</td>\n","      <td>0.015620</td>\n","      <td>-0.071184</td>\n","      <td>1.000000</td>\n","      <td>0.001102</td>\n","      <td>0.283731</td>\n","      <td>-0.276460</td>\n","      <td>0.001158</td>\n","    </tr>\n","    <tr>\n","      <th>worldPercentage</th>\n","      <td>0.978058</td>\n","      <td>0.993365</td>\n","      <td>0.997970</td>\n","      <td>0.999981</td>\n","      <td>0.999999</td>\n","      <td>0.999353</td>\n","      <td>0.988024</td>\n","      <td>0.451767</td>\n","      <td>0.452611</td>\n","      <td>-0.026561</td>\n","      <td>0.001102</td>\n","      <td>1.000000</td>\n","      <td>0.635291</td>\n","      <td>-0.361066</td>\n","      <td>0.999998</td>\n","    </tr>\n","    <tr>\n","      <th>netChange</th>\n","      <td>0.469815</td>\n","      <td>0.544772</td>\n","      <td>0.586351</td>\n","      <td>0.630626</td>\n","      <td>0.635266</td>\n","      <td>0.662503</td>\n","      <td>0.744831</td>\n","      <td>0.164410</td>\n","      <td>0.161659</td>\n","      <td>-0.033092</td>\n","      <td>0.283731</td>\n","      <td>0.635291</td>\n","      <td>1.000000</td>\n","      <td>-0.394779</td>\n","      <td>0.635203</td>\n","    </tr>\n","    <tr>\n","      <th>rank</th>\n","      <td>-0.334628</td>\n","      <td>-0.340709</td>\n","      <td>-0.347268</td>\n","      <td>-0.359633</td>\n","      <td>-0.360910</td>\n","      <td>-0.368631</td>\n","      <td>-0.395338</td>\n","      <td>-0.384235</td>\n","      <td>-0.393298</td>\n","      <td>0.130487</td>\n","      <td>-0.276460</td>\n","      <td>-0.361066</td>\n","      <td>-0.394779</td>\n","      <td>1.000000</td>\n","      <td>-0.361014</td>\n","    </tr>\n","    <tr>\n","      <th>pop_percentage</th>\n","      <td>0.978091</td>\n","      <td>0.993383</td>\n","      <td>0.997979</td>\n","      <td>0.999981</td>\n","      <td>0.999999</td>\n","      <td>0.999349</td>\n","      <td>0.988005</td>\n","      <td>0.451597</td>\n","      <td>0.452444</td>\n","      <td>-0.026613</td>\n","      <td>0.001158</td>\n","      <td>0.999998</td>\n","      <td>0.635203</td>\n","      <td>-0.361014</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f3e2a2d-dcc6-40f1-b910-f060d0bdd90b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f3e2a2d-dcc6-40f1-b910-f060d0bdd90b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f3e2a2d-dcc6-40f1-b910-f060d0bdd90b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-648fb31b-269f-4f82-9564-38fe410696a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-648fb31b-269f-4f82-9564-38fe410696a7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-648fb31b-269f-4f82-9564-38fe410696a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["## **6. Correlation between population and area**"],"metadata":{"id":"5B9QOwLX5AEP"}},{"cell_type":"code","source":["correlation = world_pop[[\"pop2024\", \"area\"]].corr()\n","print(correlation)\n","print(\"-\" * 50)\n","sns.heatmap(correlation, annot=True, cmap=\"Blues\", center=0.4)\n","plt.title(\"Correlation between Population and Area\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"1Nc3SSYb5Eil","executionInfo":{"status":"ok","timestamp":1704907989875,"user_tz":-180,"elapsed":971,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"6e87a266-65ad-480e-bbca-effd6ee0bd20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          pop2024      area\n","pop2024  1.000000  0.451687\n","area     0.451687  1.000000\n","--------------------------------------------------\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **7. Correlation between population density and growth rate**"],"metadata":{"id":"ZJg-RRWf5fQF"}},{"cell_type":"code","source":["correlation = world_pop[[\"density\", \"growthRate\"]].corr()\n","print(correlation)\n","print(\"-\" * 50)\n","sns.heatmap(correlation, annot=True, cmap=\"Blues\", center=0)\n","plt.title(\"Correlation between Population and Area\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"acxwbsGq-8FT","executionInfo":{"status":"ok","timestamp":1704907989875,"user_tz":-180,"elapsed":30,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"53056dee-5b80-4f91-a529-de51c9c815f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["             density  growthRate\n","density     1.000000   -0.071184\n","growthRate -0.071184    1.000000\n","--------------------------------------------------\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **9. Map of the world that shows the population density of each country.**"],"metadata":{"id":"BfgvFmpiE4yq"}},{"cell_type":"code","source":["import plotly.express as px\n","import plotly.graph_objects as go"],"metadata":{"id":"FyzW6bb7tNML"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["density_stats = world_pop.density.describe()\n","density_stats"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t6YlMeioboMr","executionInfo":{"status":"ok","timestamp":1704907990584,"user_tz":-180,"elapsed":6,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"c9152f2d-8895-42d5-8f7f-004555be1104"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count      234.000000\n","mean       453.814204\n","std       1990.152027\n","min          0.138400\n","25%         39.801175\n","50%         98.287400\n","75%        248.223175\n","max      21674.224900\n","Name: density, dtype: float64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["fig = px.choropleth(world_pop,\n","                    locations=\"country\",\n","                    locationmode=\"country names\",\n","                    projection=\"miller\",\n","                    hover_name=\"country\",\n","                    hover_data=[\"country\", \"density\"],\n","                    color=\"density\",\n","                    color_continuous_scale='Viridis',\n","                    range_color=[0,22000]\n","                    )\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"jwQz56eIXfWz","executionInfo":{"status":"ok","timestamp":1704907992507,"user_tz":-180,"elapsed":1926,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"14b40559-9b6a-45a4-ccbf-fa8549fddd10"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"867b99d8-86e6-42b6-b8cd-7224b39821d0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"867b99d8-86e6-42b6-b8cd-7224b39821d0\")) {                    Plotly.newPlot(                        \"867b99d8-86e6-42b6-b8cd-7224b39821d0\",                        [{\"coloraxis\":\"coloraxis\",\"customdata\":[[\"India\",484.9067],[\"China\",151.2174],[\"United States\",37.3673],[\"Indonesia\",149.0254],[\"Pakistan\",318.0908],[\"Nigeria\",251.6027],[\"Brazil\",26.039],[\"Bangladesh\",1342.1004],[\"Russia\",8.7903],[\"Ethiopia\",114.9415],[\"Mexico\",66.5596],[\"Japan\",336.4374],[\"Philippines\",399.4574],[\"Egypt\",115.0075],[\"DR Congo\",46.5914],[\"Vietnam\",317.4489],[\"Iran\",55.3527],[\"Turkey\",110.0875],[\"Germany\",238.2795],[\"Thailand\",140.707],[\"Tanzania\",78.3688],[\"United Kingdom\",280.9136],[\"France\",118.4933],[\"South Africa\",50.3015],[\"Italy\",198.493],[\"Kenya\",98.7508],[\"Myanmar\",84.2151],[\"Colombia\",47.1751],[\"South Korea\",530.1431],[\"Uganda\",248.9739],[\"Sudan\",26.423],[\"Spain\",95.031],[\"Iraq\",107.1658],[\"Algeria\",19.4306],[\"Argentina\",16.8298],[\"Afghanistan\",66.4995],[\"Poland\",131.3877],[\"Canada\",4.3619],[\"Morocco\",85.6183],[\"Ukraine\",65.4778],[\"Angola\",30.3238],[\"Saudi Arabia\",17.4322],[\"Uzbekistan\",80.9572],[\"Yemen\",66.7081],[\"Mozambique\",44.3277],[\"Ghana\",152.8461],[\"Peru\",27.0964],[\"Malaysia\",105.53],[\"Nepal\",217.9303],[\"Madagascar\",53.3802],[\"Ivory Coast\",93.0921],[\"Venezuela\",33.3262],[\"Cameroon\",62.1828],[\"Niger\",22.2933],[\"Australia\",3.4711],[\"North Korea\",217.9602],[\"Syria\",132.593],[\"Mali\",19.682],[\"Taiwan\",661.663],[\"Burkina Faso\",87.1354],[\"Sri Lanka\",354.8217],[\"Malawi\",227.7892],[\"Zambia\",28.4302],[\"Kazakhstan\",7.3446],[\"Chile\",26.4398],[\"Romania\",85.2703],[\"Chad\",14.9676],[\"Somalia\",29.8194],[\"Ecuador\",73.9949],[\"Guatemala\",171.3179],[\"Senegal\",94.6427],[\"Netherlands\",524.8329],[\"Cambodia\",96.9966],[\"Zimbabwe\",43.9972],[\"Guinea\",59.1273],[\"Rwanda\",584.3093],[\"Benin\",124.8676],[\"Burundi\",529.2701],[\"Bolivia\",11.601],[\"Tunisia\",80.8747],[\"Haiti\",430.5889],[\"Belgium\",386.9146],[\"Dominican Republic\",236.6799],[\"Jordan\",128.2172],[\"South Sudan\",17.8455],[\"Cuba\",107.655],[\"Honduras\",96.1606],[\"Sweden\",26.207],[\"Papua New Guinea\",23.2208],[\"Czech Republic\",136.0614],[\"Azerbaijan\",126.599],[\"Tajikistan\",74.4399],[\"Greece\",79.928],[\"Portugal\",111.6018],[\"Hungary\",109.5222],[\"United Arab Emirates\",135.0585],[\"Belarus\",46.5811],[\"Israel\",430.2982],[\"Togo\",170.2678],[\"Sierra Leone\",124.3831],[\"Austria\",108.7874],[\"Switzerland\",223.9961],[\"Laos\",33.5211],[\"Hong Kong\",7139.6962],[\"Nicaragua\",59.3529],[\"Serbia\",81.146],[\"Libya\",3.958],[\"Paraguay\",17.4862],[\"Kyrgyzstan\",35.6601],[\"Bulgaria\",60.9673],[\"Turkmenistan\",14.0405],[\"El Salvador\",308.7012],[\"Republic of the Congo\",18.2856],[\"Singapore\",8429.9568],[\"Denmark\",148.4924],[\"Central African Republic\",9.4957],[\"Slovakia\",116.3013],[\"Finland\",18.2598],[\"Liberia\",57.4849],[\"Norway\",15.1378],[\"Palestine\",912.7846],[\"New Zealand\",20.0142],[\"Costa Rica\",102.7559],[\"Lebanon\",510.1705],[\"Ireland\",73.8783],[\"Mauritania\",4.8452],[\"Oman\",15.2296],[\"Panama\",61.0402],[\"Kuwait\",244.073],[\"Croatia\",71.2407],[\"Eritrea\",31.5402],[\"Georgia\",53.4958],[\"Mongolia\",2.2431],[\"Uruguay\",19.5596],[\"Moldova\",101.2591],[\"Puerto Rico\",368.5233],[\"Bosnia and Herzegovina\",62.3902],[\"Gambia\",280.8106],[\"Albania\",103.1394],[\"Jamaica\",260.8253],[\"Armenia\",97.5757],[\"Qatar\",238.2124],[\"Botswana\",4.7989],[\"Lithuania\",43.0022],[\"Namibia\",3.2137],[\"Gabon\",9.6424],[\"Lesotho\",77.6048],[\"Guinea-Bissau\",78.1347],[\"Slovenia\",105.2306],[\"North Macedonia\",82.5815],[\"Latvia\",29.0895],[\"Equatorial Guinea\",62.5666],[\"Trinidad and Tobago\",299.8441],[\"Bahrain\",1909.1873],[\"Timor-Leste\",92.7964],[\"Estonia\",30.8548],[\"Mauritius\",641.3685],[\"Cyprus\",137.28],[\"Eswatini\",71.0509],[\"Djibouti\",49.7122],[\"Reunion\",393.8495],[\"Fiji\",51.6186],[\"Comoros\",466.2037],[\"Guyana\",4.1635],[\"Bhutan\",20.7756],[\"Solomon Islands\",27.0337],[\"Macau\",21674.2249],[\"Luxembourg\",256.9796],[\"Suriname\",4.0307],[\"Montenegro\",46.5503],[\"Cape Verde\",149.8788],[\"Western Sahara\",2.2496],[\"Malta\",1677.3125],[\"Maldives\",1726.29],[\"Brunei\",86.5006],[\"Belize\",18.2664],[\"Bahamas\",41.4808],[\"Guadeloupe\",243.4558],[\"Iceland\",3.7458],[\"Martinique\",324.8369],[\"Mayotte\",925.123],[\"Vanuatu\",28.0824],[\"French Guiana\",3.8283],[\"French Polynesia\",89.7099],[\"New Caledonia\",16.1907],[\"Barbados\",656.5326],[\"Sao Tome and Principe\",246.2302],[\"Samoa\",82.3619],[\"Curacao\",434.6059],[\"Saint Lucia\",296.4016],[\"Guam\",322.4333],[\"Kiribati\",167.6086],[\"Grenada\",373.1971],[\"Micronesia\",166.1429],[\"Jersey\",940.3583],[\"Tonga\",150.9486],[\"Seychelles\",235.3543],[\"Aruba\",589.8722],[\"Saint Vincent and the Grenadines\",265.8538],[\"United States Virgin Islands\",282.5793],[\"Antigua and Barbuda\",215.4909],[\"Isle of Man\",148.9544],[\"Andorra\",170.9383],[\"Dominica\",97.824],[\"Cayman Islands\",291.1875],[\"Bermuda\",1183.9815],[\"Guernsey\",1012.5079],[\"Greenland\",0.1384],[\"Faroe Islands\",39.1245],[\"Northern Mariana Islands\",108.75],[\"Saint Kitts and Nevis\",184.0269],[\"Turks and Caicos Islands\",48.9778],[\"Sint Maarten\",1303.2059],[\"American Samoa\",217.72],[\"Marshall Islands\",235.6389],[\"Liechtenstein\",248.8875],[\"Monaco\",18078.5],[\"San Marino\",560.2333],[\"Gibraltar\",4811.4706],[\"Saint Martin\",646.74],[\"British Virgin Islands\",211.7533],[\"Palau\",39.2413],[\"Cook Islands\",71.1333],[\"Anguilla\",175.1209],[\"Nauru\",644.2],[\"Tuvalu\",382.6],[\"Wallis and Futuna\",41.7482],[\"Saint Barthelemy\",440.76],[\"Saint Pierre and Miquelon\",24.0289],[\"Montserrat\",42.8627],[\"Falkland Islands\",0.3124],[\"Niue\",7.4138],[\"Tokelau\",191.5],[\"Vatican City\",1195.4545]],\"geo\":\"geo\",\"hovertemplate\":\"\\u003cb\\u003e%{hovertext}\\u003c\\u002fb\\u003e\\u003cbr\\u003e\\u003cbr\\u003ecountry=%{customdata[0]}\\u003cbr\\u003edensity=%{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"hovertext\":[\"India\",\"China\",\"United States\",\"Indonesia\",\"Pakistan\",\"Nigeria\",\"Brazil\",\"Bangladesh\",\"Russia\",\"Ethiopia\",\"Mexico\",\"Japan\",\"Philippines\",\"Egypt\",\"DR Congo\",\"Vietnam\",\"Iran\",\"Turkey\",\"Germany\",\"Thailand\",\"Tanzania\",\"United Kingdom\",\"France\",\"South Africa\",\"Italy\",\"Kenya\",\"Myanmar\",\"Colombia\",\"South Korea\",\"Uganda\",\"Sudan\",\"Spain\",\"Iraq\",\"Algeria\",\"Argentina\",\"Afghanistan\",\"Poland\",\"Canada\",\"Morocco\",\"Ukraine\",\"Angola\",\"Saudi Arabia\",\"Uzbekistan\",\"Yemen\",\"Mozambique\",\"Ghana\",\"Peru\",\"Malaysia\",\"Nepal\",\"Madagascar\",\"Ivory Coast\",\"Venezuela\",\"Cameroon\",\"Niger\",\"Australia\",\"North Korea\",\"Syria\",\"Mali\",\"Taiwan\",\"Burkina Faso\",\"Sri Lanka\",\"Malawi\",\"Zambia\",\"Kazakhstan\",\"Chile\",\"Romania\",\"Chad\",\"Somalia\",\"Ecuador\",\"Guatemala\",\"Senegal\",\"Netherlands\",\"Cambodia\",\"Zimbabwe\",\"Guinea\",\"Rwanda\",\"Benin\",\"Burundi\",\"Bolivia\",\"Tunisia\",\"Haiti\",\"Belgium\",\"Dominican Republic\",\"Jordan\",\"South Sudan\",\"Cuba\",\"Honduras\",\"Sweden\",\"Papua New Guinea\",\"Czech Republic\",\"Azerbaijan\",\"Tajikistan\",\"Greece\",\"Portugal\",\"Hungary\",\"United Arab Emirates\",\"Belarus\",\"Israel\",\"Togo\",\"Sierra Leone\",\"Austria\",\"Switzerland\",\"Laos\",\"Hong Kong\",\"Nicaragua\",\"Serbia\",\"Libya\",\"Paraguay\",\"Kyrgyzstan\",\"Bulgaria\",\"Turkmenistan\",\"El Salvador\",\"Republic of the Congo\",\"Singapore\",\"Denmark\",\"Central African Republic\",\"Slovakia\",\"Finland\",\"Liberia\",\"Norway\",\"Palestine\",\"New Zealand\",\"Costa Rica\",\"Lebanon\",\"Ireland\",\"Mauritania\",\"Oman\",\"Panama\",\"Kuwait\",\"Croatia\",\"Eritrea\",\"Georgia\",\"Mongolia\",\"Uruguay\",\"Moldova\",\"Puerto Rico\",\"Bosnia and Herzegovina\",\"Gambia\",\"Albania\",\"Jamaica\",\"Armenia\",\"Qatar\",\"Botswana\",\"Lithuania\",\"Namibia\",\"Gabon\",\"Lesotho\",\"Guinea-Bissau\",\"Slovenia\",\"North Macedonia\",\"Latvia\",\"Equatorial Guinea\",\"Trinidad and Tobago\",\"Bahrain\",\"Timor-Leste\",\"Estonia\",\"Mauritius\",\"Cyprus\",\"Eswatini\",\"Djibouti\",\"Reunion\",\"Fiji\",\"Comoros\",\"Guyana\",\"Bhutan\",\"Solomon Islands\",\"Macau\",\"Luxembourg\",\"Suriname\",\"Montenegro\",\"Cape Verde\",\"Western Sahara\",\"Malta\",\"Maldives\",\"Brunei\",\"Belize\",\"Bahamas\",\"Guadeloupe\",\"Iceland\",\"Martinique\",\"Mayotte\",\"Vanuatu\",\"French Guiana\",\"French Polynesia\",\"New Caledonia\",\"Barbados\",\"Sao Tome and Principe\",\"Samoa\",\"Curacao\",\"Saint Lucia\",\"Guam\",\"Kiribati\",\"Grenada\",\"Micronesia\",\"Jersey\",\"Tonga\",\"Seychelles\",\"Aruba\",\"Saint Vincent and the Grenadines\",\"United States Virgin Islands\",\"Antigua and Barbuda\",\"Isle of Man\",\"Andorra\",\"Dominica\",\"Cayman Islands\",\"Bermuda\",\"Guernsey\",\"Greenland\",\"Faroe Islands\",\"Northern Mariana Islands\",\"Saint Kitts and Nevis\",\"Turks and Caicos Islands\",\"Sint Maarten\",\"American Samoa\",\"Marshall Islands\",\"Liechtenstein\",\"Monaco\",\"San Marino\",\"Gibraltar\",\"Saint Martin\",\"British Virgin Islands\",\"Palau\",\"Cook Islands\",\"Anguilla\",\"Nauru\",\"Tuvalu\",\"Wallis and Futuna\",\"Saint Barthelemy\",\"Saint Pierre and Miquelon\",\"Montserrat\",\"Falkland Islands\",\"Niue\",\"Tokelau\",\"Vatican City\"],\"locationmode\":\"country names\",\"locations\":[\"India\",\"China\",\"United States\",\"Indonesia\",\"Pakistan\",\"Nigeria\",\"Brazil\",\"Bangladesh\",\"Russia\",\"Ethiopia\",\"Mexico\",\"Japan\",\"Philippines\",\"Egypt\",\"DR Congo\",\"Vietnam\",\"Iran\",\"Turkey\",\"Germany\",\"Thailand\",\"Tanzania\",\"United Kingdom\",\"France\",\"South Africa\",\"Italy\",\"Kenya\",\"Myanmar\",\"Colombia\",\"South Korea\",\"Uganda\",\"Sudan\",\"Spain\",\"Iraq\",\"Algeria\",\"Argentina\",\"Afghanistan\",\"Poland\",\"Canada\",\"Morocco\",\"Ukraine\",\"Angola\",\"Saudi Arabia\",\"Uzbekistan\",\"Yemen\",\"Mozambique\",\"Ghana\",\"Peru\",\"Malaysia\",\"Nepal\",\"Madagascar\",\"Ivory Coast\",\"Venezuela\",\"Cameroon\",\"Niger\",\"Australia\",\"North Korea\",\"Syria\",\"Mali\",\"Taiwan\",\"Burkina Faso\",\"Sri Lanka\",\"Malawi\",\"Zambia\",\"Kazakhstan\",\"Chile\",\"Romania\",\"Chad\",\"Somalia\",\"Ecuador\",\"Guatemala\",\"Senegal\",\"Netherlands\",\"Cambodia\",\"Zimbabwe\",\"Guinea\",\"Rwanda\",\"Benin\",\"Burundi\",\"Bolivia\",\"Tunisia\",\"Haiti\",\"Belgium\",\"Dominican Republic\",\"Jordan\",\"South Sudan\",\"Cuba\",\"Honduras\",\"Sweden\",\"Papua New Guinea\",\"Czech Republic\",\"Azerbaijan\",\"Tajikistan\",\"Greece\",\"Portugal\",\"Hungary\",\"United Arab Emirates\",\"Belarus\",\"Israel\",\"Togo\",\"Sierra Leone\",\"Austria\",\"Switzerland\",\"Laos\",\"Hong Kong\",\"Nicaragua\",\"Serbia\",\"Libya\",\"Paraguay\",\"Kyrgyzstan\",\"Bulgaria\",\"Turkmenistan\",\"El Salvador\",\"Republic of the Congo\",\"Singapore\",\"Denmark\",\"Central African Republic\",\"Slovakia\",\"Finland\",\"Liberia\",\"Norway\",\"Palestine\",\"New Zealand\",\"Costa Rica\",\"Lebanon\",\"Ireland\",\"Mauritania\",\"Oman\",\"Panama\",\"Kuwait\",\"Croatia\",\"Eritrea\",\"Georgia\",\"Mongolia\",\"Uruguay\",\"Moldova\",\"Puerto Rico\",\"Bosnia and Herzegovina\",\"Gambia\",\"Albania\",\"Jamaica\",\"Armenia\",\"Qatar\",\"Botswana\",\"Lithuania\",\"Namibia\",\"Gabon\",\"Lesotho\",\"Guinea-Bissau\",\"Slovenia\",\"North Macedonia\",\"Latvia\",\"Equatorial Guinea\",\"Trinidad and Tobago\",\"Bahrain\",\"Timor-Leste\",\"Estonia\",\"Mauritius\",\"Cyprus\",\"Eswatini\",\"Djibouti\",\"Reunion\",\"Fiji\",\"Comoros\",\"Guyana\",\"Bhutan\",\"Solomon Islands\",\"Macau\",\"Luxembourg\",\"Suriname\",\"Montenegro\",\"Cape Verde\",\"Western Sahara\",\"Malta\",\"Maldives\",\"Brunei\",\"Belize\",\"Bahamas\",\"Guadeloupe\",\"Iceland\",\"Martinique\",\"Mayotte\",\"Vanuatu\",\"French Guiana\",\"French Polynesia\",\"New Caledonia\",\"Barbados\",\"Sao Tome and Principe\",\"Samoa\",\"Curacao\",\"Saint Lucia\",\"Guam\",\"Kiribati\",\"Grenada\",\"Micronesia\",\"Jersey\",\"Tonga\",\"Seychelles\",\"Aruba\",\"Saint Vincent and the Grenadines\",\"United States Virgin Islands\",\"Antigua and Barbuda\",\"Isle of Man\",\"Andorra\",\"Dominica\",\"Cayman Islands\",\"Bermuda\",\"Guernsey\",\"Greenland\",\"Faroe Islands\",\"Northern Mariana Islands\",\"Saint Kitts and Nevis\",\"Turks and Caicos Islands\",\"Sint Maarten\",\"American Samoa\",\"Marshall Islands\",\"Liechtenstein\",\"Monaco\",\"San Marino\",\"Gibraltar\",\"Saint Martin\",\"British Virgin Islands\",\"Palau\",\"Cook Islands\",\"Anguilla\",\"Nauru\",\"Tuvalu\",\"Wallis and Futuna\",\"Saint Barthelemy\",\"Saint Pierre and Miquelon\",\"Montserrat\",\"Falkland Islands\",\"Niue\",\"Tokelau\",\"Vatican City\"],\"name\":\"\",\"z\":[484.9067,151.2174,37.3673,149.0254,318.0908,251.6027,26.039,1342.1004,8.7903,114.9415,66.5596,336.4374,399.4574,115.0075,46.5914,317.4489,55.3527,110.0875,238.2795,140.707,78.3688,280.9136,118.4933,50.3015,198.493,98.7508,84.2151,47.1751,530.1431,248.9739,26.423,95.031,107.1658,19.4306,16.8298,66.4995,131.3877,4.3619,85.6183,65.4778,30.3238,17.4322,80.9572,66.7081,44.3277,152.8461,27.0964,105.53,217.9303,53.3802,93.0921,33.3262,62.1828,22.2933,3.4711,217.9602,132.593,19.682,661.663,87.1354,354.8217,227.7892,28.4302,7.3446,26.4398,85.2703,14.9676,29.8194,73.9949,171.3179,94.6427,524.8329,96.9966,43.9972,59.1273,584.3093,124.8676,529.2701,11.601,80.8747,430.5889,386.9146,236.6799,128.2172,17.8455,107.655,96.1606,26.207,23.2208,136.0614,126.599,74.4399,79.928,111.6018,109.5222,135.0585,46.5811,430.2982,170.2678,124.3831,108.7874,223.9961,33.5211,7139.6962,59.3529,81.146,3.958,17.4862,35.6601,60.9673,14.0405,308.7012,18.2856,8429.9568,148.4924,9.4957,116.3013,18.2598,57.4849,15.1378,912.7846,20.0142,102.7559,510.1705,73.8783,4.8452,15.2296,61.0402,244.073,71.2407,31.5402,53.4958,2.2431,19.5596,101.2591,368.5233,62.3902,280.8106,103.1394,260.8253,97.5757,238.2124,4.7989,43.0022,3.2137,9.6424,77.6048,78.1347,105.2306,82.5815,29.0895,62.5666,299.8441,1909.1873,92.7964,30.8548,641.3685,137.28,71.0509,49.7122,393.8495,51.6186,466.2037,4.1635,20.7756,27.0337,21674.2249,256.9796,4.0307,46.5503,149.8788,2.2496,1677.3125,1726.29,86.5006,18.2664,41.4808,243.4558,3.7458,324.8369,925.123,28.0824,3.8283,89.7099,16.1907,656.5326,246.2302,82.3619,434.6059,296.4016,322.4333,167.6086,373.1971,166.1429,940.3583,150.9486,235.3543,589.8722,265.8538,282.5793,215.4909,148.9544,170.9383,97.824,291.1875,1183.9815,1012.5079,0.1384,39.1245,108.75,184.0269,48.9778,1303.2059,217.72,235.6389,248.8875,18078.5,560.2333,4811.4706,646.74,211.7533,39.2413,71.1333,175.1209,644.2,382.6,41.7482,440.76,24.0289,42.8627,0.3124,7.4138,191.5,1195.4545],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"projection\":{\"type\":\"miller\"},\"center\":{}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"density\"}},\"colorscale\":[[0.0,\"#440154\"],[0.1111111111111111,\"#482878\"],[0.2222222222222222,\"#3e4989\"],[0.3333333333333333,\"#31688e\"],[0.4444444444444444,\"#26828e\"],[0.5555555555555556,\"#1f9e89\"],[0.6666666666666666,\"#35b779\"],[0.7777777777777778,\"#6ece58\"],[0.8888888888888888,\"#b5de2b\"],[1.0,\"#fde725\"]],\"cmin\":0,\"cmax\":22000},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('867b99d8-86e6-42b6-b8cd-7224b39821d0');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["world_pop.density"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xA6erxPoa8Lc","executionInfo":{"status":"ok","timestamp":1704907992508,"user_tz":-180,"elapsed":20,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"outputId":"0319b988-33d8-454b-ad18-5922e91564a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       484.9067\n","1       151.2174\n","2        37.3673\n","3       149.0254\n","4       318.0908\n","         ...    \n","229      42.8627\n","230       0.3124\n","231       7.4138\n","232     191.5000\n","233    1195.4545\n","Name: density, Length: 234, dtype: float64"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["- map of the world that shows the population density of each country.\n","- population growth rates of different countries.\n","- relationship between population growth and other factors (economic development, education level, healthcare)"],"metadata":{"id":"6If-txrl34AP"}},{"cell_type":"code","source":["help(px.choropleth)"],"metadata":{"id":"yyirk_EtzeQ-","executionInfo":{"status":"ok","timestamp":1704907992508,"user_tz":-180,"elapsed":15,"user":{"displayName":"Waruchu Kuria","userId":"16243336025214034891"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9a3fb8c8-c987-4bbf-ed0e-c8f26b8fd528"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on function choropleth in module plotly.express._chart_types:\n","\n","choropleth(data_frame=None, lat=None, lon=None, locations=None, locationmode=None, geojson=None, featureidkey=None, color=None, facet_row=None, facet_col=None, facet_col_wrap=0, facet_row_spacing=None, facet_col_spacing=None, hover_name=None, hover_data=None, custom_data=None, animation_frame=None, animation_group=None, category_orders=None, labels=None, color_discrete_sequence=None, color_discrete_map=None, color_continuous_scale=None, range_color=None, color_continuous_midpoint=None, projection=None, scope=None, center=None, fitbounds=None, basemap_visible=None, title=None, template=None, width=None, height=None) -> plotly.graph_objs._figure.Figure\n","        In a choropleth map, each row of `data_frame` is represented by a\n","        colored region mark on a map.\n","        \n","    Parameters\n","    ----------\n","    data_frame: DataFrame or array-like or dict\n","        This argument needs to be passed for column names (and not keyword\n","        names) to be used. Array-like and dict are transformed internally to a\n","        pandas DataFrame. Optional: if missing, a DataFrame gets constructed\n","        under the hood using the other arguments.\n","    lat: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        position marks according to latitude on a map.\n","    lon: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        position marks according to longitude on a map.\n","    locations: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are to be\n","        interpreted according to `locationmode` and mapped to\n","        longitude/latitude.\n","    locationmode: str\n","        One of 'ISO-3', 'USA-states', or 'country names' Determines the set of\n","        locations used to match entries in `locations` to regions on the map.\n","    geojson: GeoJSON-formatted dict\n","        Must contain a Polygon feature collection, with IDs, which are\n","        references from `locations`.\n","    featureidkey: str (default: `'id'`)\n","        Path to field in GeoJSON feature object with which to match the values\n","        passed in to `locations`.The most common alternative to the default is\n","        of the form `'properties.<key>`.\n","    color: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        assign color to marks.\n","    facet_row: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        assign marks to facetted subplots in the vertical direction.\n","    facet_col: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        assign marks to facetted subplots in the horizontal direction.\n","    facet_col_wrap: int\n","        Maximum number of facet columns. Wraps the column variable at this\n","        width, so that the column facets span multiple rows. Ignored if 0, and\n","        forced to 0 if `facet_row` or a `marginal` is set.\n","    facet_row_spacing: float between 0 and 1\n","        Spacing between facet rows, in paper units. Default is 0.03 or 0.0.7\n","        when facet_col_wrap is used.\n","    facet_col_spacing: float between 0 and 1\n","        Spacing between facet columns, in paper units Default is 0.02.\n","    hover_name: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like appear in bold\n","        in the hover tooltip.\n","    hover_data: str, or list of str or int, or Series or array-like, or dict\n","        Either a name or list of names of columns in `data_frame`, or pandas\n","        Series, or array_like objects or a dict with column names as keys, with\n","        values True (for default formatting) False (in order to remove this\n","        column from hover information), or a formatting string, for example\n","        ':.3f' or '|%a' or list-like data to appear in the hover tooltip or\n","        tuples with a bool or formatting string as first element, and list-like\n","        data to appear in hover as second element Values from these columns\n","        appear as extra data in the hover tooltip.\n","    custom_data: str, or list of str or int, or Series or array-like\n","        Either name or list of names of columns in `data_frame`, or pandas\n","        Series, or array_like objects Values from these columns are extra data,\n","        to be used in widgets or Dash callbacks for example. This data is not\n","        user-visible but is included in events emitted by the figure (lasso\n","        selection etc.)\n","    animation_frame: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        assign marks to animation frames.\n","    animation_group: str or int or Series or array-like\n","        Either a name of a column in `data_frame`, or a pandas Series or\n","        array_like object. Values from this column or array_like are used to\n","        provide object-constancy across animation frames: rows with matching\n","        `animation_group`s will be treated as if they describe the same object\n","        in each frame.\n","    category_orders: dict with str keys and list of str values (default `{}`)\n","        By default, in Python 3.6+, the order of categorical values in axes,\n","        legends and facets depends on the order in which these values are first\n","        encountered in `data_frame` (and no order is guaranteed by default in\n","        Python below 3.6). This parameter is used to force a specific ordering\n","        of values per column. The keys of this dict should correspond to column\n","        names, and the values should be lists of strings corresponding to the\n","        specific display order desired.\n","    labels: dict with str keys and str values (default `{}`)\n","        By default, column names are used in the figure for axis titles, legend\n","        entries and hovers. This parameter allows this to be overridden. The\n","        keys of this dict should correspond to column names, and the values\n","        should correspond to the desired label to be displayed.\n","    color_discrete_sequence: list of str\n","        Strings should define valid CSS-colors. When `color` is set and the\n","        values in the corresponding column are not numeric, values in that\n","        column are assigned colors by cycling through `color_discrete_sequence`\n","        in the order described in `category_orders`, unless the value of\n","        `color` is a key in `color_discrete_map`. Various useful color\n","        sequences are available in the `plotly.express.colors` submodules,\n","        specifically `plotly.express.colors.qualitative`.\n","    color_discrete_map: dict with str keys and str values (default `{}`)\n","        String values should define valid CSS-colors Used to override\n","        `color_discrete_sequence` to assign a specific colors to marks\n","        corresponding with specific values. Keys in `color_discrete_map` should\n","        be values in the column denoted by `color`. Alternatively, if the\n","        values of `color` are valid colors, the string `'identity'` may be\n","        passed to cause them to be used directly.\n","    color_continuous_scale: list of str\n","        Strings should define valid CSS-colors This list is used to build a\n","        continuous color scale when the column denoted by `color` contains\n","        numeric data. Various useful color scales are available in the\n","        `plotly.express.colors` submodules, specifically\n","        `plotly.express.colors.sequential`, `plotly.express.colors.diverging`\n","        and `plotly.express.colors.cyclical`.\n","    range_color: list of two numbers\n","        If provided, overrides auto-scaling on the continuous color scale.\n","    color_continuous_midpoint: number (default `None`)\n","        If set, computes the bounds of the continuous color scale to have the\n","        desired midpoint. Setting this value is recommended when using\n","        `plotly.express.colors.diverging` color scales as the inputs to\n","        `color_continuous_scale`.\n","    projection: str \n","        One of `'equirectangular'`, `'mercator'`, `'orthographic'`, `'natural\n","        earth'`, `'kavrayskiy7'`, `'miller'`, `'robinson'`, `'eckert4'`,\n","        `'azimuthal equal area'`, `'azimuthal equidistant'`, `'conic equal\n","        area'`, `'conic conformal'`, `'conic equidistant'`, `'gnomonic'`,\n","        `'stereographic'`, `'mollweide'`, `'hammer'`, `'transverse mercator'`,\n","        `'albers usa'`, `'winkel tripel'`, `'aitoff'`, or `'sinusoidal'`Default\n","        depends on `scope`.\n","    scope: str (default `'world'`).\n","        One of `'world'`, `'usa'`, `'europe'`, `'asia'`, `'africa'`, `'north\n","        america'`, or `'south america'`Default is `'world'` unless `projection`\n","        is set to `'albers usa'`, which forces `'usa'`.\n","    center: dict\n","        Dict keys are `'lat'` and `'lon'` Sets the center point of the map.\n","    fitbounds: str (default `False`).\n","        One of `False`, `locations` or `geojson`.\n","    basemap_visible: bool\n","        Force the basemap visibility.\n","    title: str\n","        The figure title.\n","    template: str or dict or plotly.graph_objects.layout.Template instance\n","        The figure template name (must be a key in plotly.io.templates) or\n","        definition.\n","    width: int (default `None`)\n","        The figure width in pixels.\n","    height: int (default `None`)\n","        The figure height in pixels.\n","    \n","    Returns\n","    -------\n","        plotly.graph_objects.Figure\n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"G0FZ32ldY4o1"},"execution_count":null,"outputs":[]}]}